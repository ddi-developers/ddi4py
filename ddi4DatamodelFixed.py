# generated by datamodel-codegen:
#   filename:  jsonSchema.json
#   timestamp: 2024-12-06T12:52:13+00:00

from __future__ import annotations

from datetime import date, datetime
from typing import Dict, List, Optional

from pydantic import BaseModel as PydanticBaseModel, ConfigDict, Field, RootModel, conint, constr

class BaseModel(PydanticBaseModel):
    field_type: Optional[str] = Field(None, alias='$type')
    
class BasicIncrementType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    increment: Optional[str] = None
    startValue: Optional[str] = None
    endValue: Optional[str] = None


class BibliographicNameType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    affiliation: Optional[str] = None


class BoundingBoxType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    westLongitude: Optional[float] = None
    eastLongitude: Optional[float] = None
    southLatitude: Optional[float] = None
    northLatitude: Optional[float] = None


class CodeValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stringValue: Optional[str] = None
    controlledVocabularyID: Optional[str] = None
    controlledVocabularyName: Optional[str] = None
    controlledVocabularyAgencyName: Optional[str] = None
    controlledVocabularyVersionID: Optional[str] = None
    otherValue: Optional[str] = None
    controlledVocabularyURN: Optional[str] = None
    controlledVocabularySchemeURN: Optional[str] = None


class DataCollectionFrequencyType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    intendedFrequency: Optional[CodeValueType] = None


class DataFingerprintType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    digitalFingerprintValue: Optional[str] = None
    algorithmSpecification: Optional[str] = None
    algorithmVersion: Optional[str] = None
    type: Optional[str] = None


class DelimiterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherValue: Optional[str] = None
    treatConsecutiveDelimiterAsOne: Optional[bool] = None
    delimiterTypeValue: Optional[str] = None


class DimensionIntersectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    includedDimension: Optional[List[int]] = Field(None, min_length=0)
    forAllDimensions: Optional[bool] = None
    intersectValue: Optional[str] = None


class DistributionRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    distributionValue: Optional[float] = None
    decimalPositions: Optional[int] = None


class DoubleNumberRangeValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    doubleValue: Optional[float] = None
    isInclusive: Optional[bool] = None


class EmptyType(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class HistoricalDateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    nonISODate: Optional[str] = None
    historicalDateFormat: Optional[CodeValueType] = None
    calendar: Optional[CodeValueType] = None


class ImageAreaType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    shape: Optional[str] = None
    coordinates: Optional[str] = None


class InParameterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    limitArrayIndex: Optional[str] = None


class InternationalCodeValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    controlledVocabularyID: Optional[str] = None
    controlledVocabularyName: Optional[str] = None
    controlledVocabularyAgencyName: Optional[str] = None
    controlledVocabularyVersionID: Optional[str] = None
    otherValue: Optional[str] = None
    controlledVocabularyURN: Optional[str] = None
    controlledVocabularySchemeURN: Optional[str] = None


class InternationalIdentifierType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    identifierContent: Optional[str] = None
    managingAgency: Optional[CodeValueType] = None


class KindOfDataType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Optional[str] = None


class MaintainableObjectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfObject: Optional[str] = None
    maintainableID: Optional[str] = None
    maintainableVersion: Optional[str] = None


class NameType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    isPreferred: Optional[bool] = None
    context: Optional[str] = None


class NominalRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    regExp: Optional[str] = None


class NotUsedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stringValue: Optional[str] = None
    xpath: Optional[str] = None


class NumberRangeValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    decimalValue: Optional[float] = None
    isInclusive: Optional[bool] = None


class QuestionSequenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    handlingOfStimulusMaterial: Optional[str] = None


class RangeValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    included: Optional[bool] = None


class ReferenceDateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)


class RelatedValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Optional[str] = None
    valueIsBlank: Optional[bool] = None


class RepresentationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    recommendedDataType: Optional[CodeValueType] = None
    genericOutputFormat: Optional[CodeValueType] = None
    measurementUnit: Optional[CodeValueType] = None
    missingValue: Optional[str] = None
    blankIsMissingValue: Optional[bool] = None
    classificationLevelCode: Optional[CodeValueType] = None


class SpatialCoordinateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    coordinateValue: Optional[str] = None
    coordinateType: Optional[str] = None


class StandardKeyValuePairType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attributeKey: Optional[CodeValueType] = None
    attributeValue: Optional[CodeValueType] = None


class StandardWeightType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    standardWeightValue: Optional[float] = None


class StatisticDoubleType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    doubleValue: Optional[float] = None
    isWeighted: Optional[bool] = None
    computationBase: Optional[str] = None


class StatisticType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    decimalValue: Optional[float] = None
    isWeighted: Optional[bool] = None
    computationBase: Optional[str] = None


class StructuredCommandType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')


class SummaryStatisticType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfSummaryStatistic: Optional[CodeValueType] = None
    statistic: Optional[StatisticType] = None
    statisticDouble: Optional[StatisticDoubleType] = None


class TemporalCoverageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    referenceDate: Optional[List[ReferenceDateType]] = Field(None, min_length=0)


class TextType(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class TopicalCoverageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)


class UserIDType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stringValue: Optional[str] = None
    typeOfUserID: Optional[str] = None
    userIDVersion: Optional[str] = None
    typeOfUserVersion: Optional[str] = None


class ValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stringValue: Optional[str] = None


class VideoType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfVideoClip: Optional[CodeValueType] = None
    videoClipBegin: Optional[str] = None
    videoClipEnd: Optional[str] = None


class XMLPrefixMapType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    xMLPrefix: Optional[str] = None
    xMLNamespace: Optional[str] = None


class Reference(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    value: Optional[List[str]] = None


class AnyURI(RootModel[str]):
    root: str


class Date(RootModel[date]):
    root: date


class DateTime(RootModel[datetime]):
    root: datetime


class LangString(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    languageTag: Optional[str] = None
    value: Optional[str] = None


class Language(RootModel[str]):
    root: str


class NonNegativeInteger(RootModel[conint(ge=0)]):
    root: conint(ge=0)


class Duration(RootModel[float]):
    root: float


class GYear(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    year: Optional[int] = None
    timezone: Optional[
        constr(pattern=r'^(Z)|((\+|\-)(00|0[0-9]|1[0-9]|2[0-3]):([0-9]|[0-5][0-9]))$')
    ] = None


class GYearMonth(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    year: int
    month: int
    timezone: Optional[
        constr(pattern=r'^(Z)|((\+|\-)(00|0[0-9]|1[0-9]|2[0-3]):([0-9]|[0-5][0-9]))$')
    ] = None


class AggregationDefinitionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    independentDimension: Optional[List[NonNegativeInteger]] = Field(None, min_length=0)
    dependentDimension: Optional[List[NonNegativeInteger]] = Field(None, min_length=0)
    isNCubeUniverse: Optional[bool] = None


class AggregationVariablesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    independentVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    dependentVariableReference: Optional[List[Reference]] = Field(None, min_length=0)


class AnchorType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    categoryReference: Optional[Reference] = None
    value_string: Optional[str] = None


class AreaCoverageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfArea: Optional[CodeValueType] = None
    measurementUnit: Optional[CodeValueType] = None
    areaMeasure: Optional[float] = None


class AudioType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfAudioClip: Optional[CodeValueType] = None
    audioClipBegin: Optional[str] = None
    audioClipEnd: Optional[str] = None


class AuthorizedPolicySourceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)


class BudgetDocumentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class CaseSpecificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    conditionalVariableReference: Optional[Reference] = None
    conditionalVariableValue: Optional[str] = None
    variableReference: Optional[List[Reference]] = Field(None, min_length=1)


class CategoryRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    categorySchemeReference: Optional[Reference] = None


class CategoryStatisticType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfCategoryStatistic: Optional[CodeValueType] = None
    statistic: Optional[StatisticType] = None
    statisticDouble: Optional[StatisticDoubleType] = None


class CharacterParameterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    startCharOffset: Optional[NonNegativeInteger] = None
    endCharOffset: Optional[NonNegativeInteger] = None


class CodeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    categoryReference: Optional[Reference] = None
    value: Optional[ValueType] = None
    code: Optional[List[CodeType]] = None
    isDiscrete: Optional[bool] = None
    levelNumber: Optional[NonNegativeInteger] = None
    isComprehensive: Optional[str] = None
    isTotal: Optional[bool] = None


class ConcatenatedValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[List[Reference]] = Field(None, min_length=2)


class ConditionalIdentifierType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caseSpecification: Optional[List[CaseSpecificationType]] = Field(None, min_length=0)


class ContentDateOffsetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    numberOfUnits: Optional[NonNegativeInteger] = None
    isNegativeOffset: Optional[bool] = None


class ContentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    multilingualStringValue: Optional[LangString] = None
    isTranslated: Optional[bool] = None
    isTranslatable: Optional[bool] = None
    translationSourceLanguage: Optional[List[Language]] = Field(None, min_length=0)
    translationDate: Optional[Date] = None
    textFormat: Optional[str] = None
    scope: Optional[str] = None


class ContributorType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contributorName: Optional[BibliographicNameType] = None
    contributorRole: Optional[List[CodeValueType]] = Field(None, min_length=0)
    contributorReference: Optional[Reference] = None


class CoordinatePairsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    maxArray: Optional[NonNegativeInteger] = None
    arraySeparator: Optional[str] = None


class CountryCodeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    effectiveDate: Optional[DateTime] = None


class CreatorType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    creatorName: Optional[BibliographicNameType] = None
    creatorReference: Optional[Reference] = None


class DataExistenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    levelNumber: Optional[NonNegativeInteger] = None
    discreteCategory: Optional[bool] = None


class DDIMaintenanceAgencyIDType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stringValue: Optional[str] = None
    registryID: Optional[str] = None
    activationDate: Optional[DateTime] = None


class DefaultMissingValuesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    missingValuesReference: Optional[Reference] = None
    defaultUsedNoDocumentation: Optional[bool] = None


class DimensionRankValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    value: Optional[ValueType] = None
    rank: Optional[NonNegativeInteger] = None


class DimensionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    rank: Optional[NonNegativeInteger] = None


class DomainSpecificValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    value: Optional[List[ValueType]] = Field(None, min_length=0)
    attachmentDomain: Optional[int] = None


class EvaluatorType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    evaluatorReference: Optional[Reference] = None
    evaluatorRole: Optional[List[CodeValueType]] = Field(None, min_length=0)


class ExternalAidType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class ExternalInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class FixedIdentifierType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[List[Reference]] = Field(None, min_length=0)


class IdentifiableType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    urn: Optional[str] = None
    agency: Optional[str] = None
    id: Optional[str] = None
    version: Optional[str] = None
    userID: Optional[List[UserIDType]] = Field(None, min_length=0)
    userAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )


class ImageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    imageLocation: Optional[AnyURI] = None
    typeOfImage: Optional[CodeValueType] = None
    dpi: Optional[NonNegativeInteger] = None
    languageOfImage: Optional[Language] = None


class ItemValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    recordReference: Optional[str] = None
    value: Optional[List[ValueType]] = Field(None, min_length=0)


class LevelContextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    levelNumber: Optional[NonNegativeInteger] = None
    classificationLevelReference: Optional[Reference] = None
    classificationItemReference: Optional[List[Reference]] = Field(None, min_length=0)


class LineParameterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    startLine: Optional[NonNegativeInteger] = None
    startOffset: Optional[NonNegativeInteger] = None
    endLine: Optional[NonNegativeInteger] = None
    endOffset: Optional[int] = None


class LiteralTextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    text: Optional[TextType] = None


class MeasureDefinitionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    variableReference: Optional[Reference] = None
    aggregationDefinition: Optional[AggregationDefinitionType] = None


class MeasureDimensionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    nCubeMeasureDefinitionReference: Optional[List[MeasureDefinitionType]] = Field(
        None, min_length=0
    )


class MeasureDimensionValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dimensionCellValue: Optional[NonNegativeInteger] = None
    arrayOrder: Optional[NonNegativeInteger] = None


class MeasureIType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    measureDimensionValue: Optional[List[MeasureDimensionValueType]] = Field(
        None, min_length=0
    )
    value: Optional[ValueType] = None


class PhysicalLocationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    storageFormat: Optional[CodeValueType] = None
    delimiter: Optional[DelimiterType] = None
    startPosition: Optional[NonNegativeInteger] = None
    arrayPosition: Optional[NonNegativeInteger] = None
    endPosition: Optional[NonNegativeInteger] = None
    width: Optional[NonNegativeInteger] = None
    decimalPositions: Optional[int] = None
    decimalSeparator: Optional[str] = None
    digitGroupSeparator: Optional[str] = None
    languageOfData: Optional[List[Language]] = Field(None, min_length=0)
    localeOfData: Optional[str] = None


class PhysicalRecordSegmentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    keyVariableReference: Optional[Reference] = None
    keyVariableValue: Optional[ValueType] = None
    fileNameIdentification: Optional[str] = None
    segmentOrder: Optional[NonNegativeInteger] = None
    hasSegmentKey: Optional[bool] = None


class PhysicalTableLocationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    columnNumber: Optional[NonNegativeInteger] = None
    rowSequence: Optional[NonNegativeInteger] = None


class PointType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    xCoordinate: Optional[SpatialCoordinateType] = None
    yCoordinate: Optional[SpatialCoordinateType] = None


class PolygonType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    externalURI: Optional[AnyURI] = None
    polygonLinkCode: Optional[str] = None
    shapeFileFormat: Optional[CodeValueType] = None
    point: Optional[List[PointType]] = Field(None, min_length=0)


class ProprietaryInfoType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    proprietaryProperty: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )


class PublicationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class PublisherType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    publisherName: Optional[BibliographicNameType] = None
    publisherRole: Optional[List[CodeValueType]] = Field(None, min_length=0)
    publisherReference: Optional[Reference] = None


class RankingRangeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    maximumRepetitionOfSingleValue: Optional[NonNegativeInteger] = None


class RankingRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    rankingRange: Optional[RankingRangeType] = None


class RecordType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    value: Optional[List[ValueType]] = Field(None, min_length=0)


class RequiredResourcePackagesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    resourcePackageReference: Optional[List[Reference]] = Field(None, min_length=0)


class ResourcePackageArchiveType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    archiveReference: Optional[List[Reference]] = Field(None, min_length=0)


class ResponseCardinalityType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    minimumResponses: Optional[NonNegativeInteger] = None
    maximumResponses: Optional[NonNegativeInteger] = None


class SelectDimensionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    rank: Optional[NonNegativeInteger] = None
    allValues: Optional[bool] = None
    specificValue: Optional[str] = None
    rangeMinimum: Optional[str] = None
    rangeMaximum: Optional[str] = None


class SizeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    unitTypeReference: Optional[Reference] = None
    numberOfUnits: Optional[NonNegativeInteger] = None


class SourceObjectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    organizationReference: Optional[Reference] = None
    individualReference: Optional[Reference] = None
    relationshipCode: Optional[str] = None


class SourceRepresentationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    managedRepresentationReference: Optional[Reference] = None
    categorySchemeReference: Optional[Reference] = None
    codeListReference: Optional[Reference] = None
    geographicStructureReference: Optional[Reference] = None
    geographicLocationReference: Optional[Reference] = None
    conceptReference: Optional[Reference] = None


class SourceTargetLinkType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    sourceLinkVariableReference: Optional[Reference] = None
    targetLinkVariableReference: Optional[Reference] = None


class StandardUsedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class StatisticalDataLocationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    physicalInstanceReference: Optional[Reference] = None
    isInline: Optional[bool] = None


class StatisticalSummaryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    statisticalDataLocation: Optional[List[StatisticalDataLocationType]] = Field(
        None, min_length=0
    )
    variableStatisticsReference: Optional[List[Reference]] = Field(None, min_length=0)


class StimulusMaterialType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class StringType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    multilingualStringValue: Optional[LangString] = None
    isTranslated: Optional[bool] = None
    isTranslatable: Optional[bool] = None
    translationSourceLanguage: Optional[List[Language]] = Field(None, min_length=0)
    translationDate: Optional[Date] = None


class StructuredStringType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content: Optional[List[ContentType]] = Field(None, min_length=0)


class StudyClassType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    classType: Optional[CodeValueType] = None


class TargetSampleSizeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    strataNumber: Optional[NonNegativeInteger] = None
    desiredSampleSize: Optional[SizeType] = None
    sampleSizeFormulaReference: Optional[Reference] = None


class TextContentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    description: Optional[StructuredStringType] = None


class TextRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    maxLength: Optional[NonNegativeInteger] = None
    minLength: Optional[NonNegativeInteger] = None
    regExp: Optional[str] = None


class TextualType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lineParameter: Optional[List[LineParameterType]] = Field(None, min_length=0)
    characterParameter: Optional[List[CharacterParameterType]] = Field(
        None, min_length=0
    )


class TimeMethodType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfTimeMethod: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class TopLeftTableAnchorType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    column: Optional[str] = None
    row: Optional[NonNegativeInteger] = None


class TranslationAidResourceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None


class TranslationAidType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfTranslationAid: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    translationAidResource: Optional[TranslationAidResourceType] = None


class TranslationMethodType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfTranslationMethod: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class TranslationRequirementsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    isOral: Optional[bool] = None
    isWritten: Optional[bool] = None


class TranslationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    language: Optional[List[CodeValueType]] = Field(None, min_length=0)
    i18nText: Optional[str] = None
    i18nCatalog: Optional[str] = None
    description: Optional[StructuredStringType] = None
    lang: Optional[Language] = None


class URIType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    anyURIValue: Optional[AnyURI] = None
    isPublic: Optional[bool] = None


class UrlType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    anyURIValue: Optional[AnyURI] = None
    privacy: Optional[str] = None
    isPreferred: Optional[bool] = None


class URNType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    anyURIValue: Optional[AnyURI] = None
    type: Optional[str] = None
    typeOfIdentifier: Optional[str] = None


class VariableAttributeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfVariableAttribute: Optional[CodeValueType] = None
    variableReference: Optional[Reference] = None


class VariableItemType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    value: Optional[List[ValueType]] = Field(None, min_length=0)


class VariableOrderType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[List[Reference]] = Field(None, min_length=0)


class VariableRepresentationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableRole: Optional[CodeValueType] = None
    weightVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    standardWeightReference: Optional[StandardWeightType] = None
    variableAttribute: Optional[List[VariableAttributeType]] = Field(None, min_length=0)
    imputationReference: Optional[Reference] = None
    concatenatedValue: Optional[ConcatenatedValueType] = None
    processingInstructionReference: Optional[Reference] = None
    valueRepresentation: Optional[RepresentationType] = None
    valueRepresentationReference: Optional[Reference] = None
    missingValuesReference: Optional[Reference] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None
    aggregationMethod: Optional[CodeValueType] = None
    additivity: Optional[str] = None


class VariableSetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableItem: Optional[List[VariableItemType]] = Field(None, min_length=0)


class VariablesInRecordType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    variableUsedReference: Optional[List[Reference]] = Field(None, min_length=0)
    allVariablesInLogicalProduct: Optional[bool] = None


class VariableValueReferenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    relatedValue: Optional[List[RelatedValueType]] = Field(None, min_length=0)


class CogsDate(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dateTime: Optional[DateTime] = None
    date: Optional[Date] = None
    gYearMonth: Optional[GYearMonth] = None
    gYear: Optional[GYear] = None
    duration: Optional[Duration] = None


class AccessRestrictionDateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    reason: Optional[StructuredStringType] = None
    user: Optional[StructuredStringType] = None


class ActionToMinimizeLossesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfActionToMinimizeLosses: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class AdditionalDataCollectionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfAdditionalData: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class AggregationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    aggregationMethod: Optional[CodeValueType] = None
    aggregationVariables: Optional[AggregationVariablesType] = None
    aggregationVariablesReference: Optional[AggregationVariablesType] = None


class AttachmentLocationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    codeReference: Optional[List[CodeType]] = Field(None, min_length=0)
    categoryReference: Optional[List[Reference]] = Field(None, min_length=0)
    domainSpecificValue: Optional[List[DomainSpecificValueType]] = Field(
        None, min_length=0
    )


class AuthorizationSourceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorizingAgencyReference: Optional[List[Reference]] = Field(None, min_length=0)
    statementOfAuthorization: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )
    legalMandate: Optional[List[str]] = Field(None, min_length=0)
    authorizationDate: Optional[CogsDate] = None


class BudgetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    budgetDocument: Optional[List[BudgetDocumentType]] = Field(None, min_length=0)


class CaseIdentificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fixedIdentifier: Optional[FixedIdentifierType] = None
    conditionalIdentifier: Optional[ConditionalIdentifierType] = None
    isPrimary: Optional[bool] = None


class CaseLawType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    caseLawName: Optional[List[NameType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    caseLawDate: Optional[CogsDate] = None


class CategoryValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    codeReference: Optional[CodeType] = None
    value: Optional[ValueType] = None


class CellCoordinatesAsDefinedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    selectDimension: Optional[List[SelectDimensionType]] = Field(None, min_length=0)


class ClassificationMapType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    sourceClassificationItemReference: Optional[Reference] = None
    targetClassificationItemReference: Optional[Reference] = None
    isComplete: Optional[bool] = None
    validFrom: Optional[CogsDate] = None
    validTo: Optional[CogsDate] = None


class CollectionSituationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfCollectionSituation: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class ComplianceDefinitionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    complianceConceptReference: Optional[Reference] = None
    externalComplianceCode: Optional[CodeValueType] = None
    complianceRequirements: Optional[StructuredStringType] = None


class ComplianceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    complianceConceptReference: Optional[Reference] = None
    externalComplianceCode: Optional[CodeValueType] = None
    complianceDescription: Optional[StructuredStringType] = None


class CorrespondenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    commonality: Optional[StructuredStringType] = None
    difference: Optional[StructuredStringType] = None
    commonalityTypeCoded: Optional[CodeValueType] = None
    commonalityWeight: Optional[float] = None
    userDefinedCorrespondenceProperty: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )


class DataCollectionMethodologyType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfDataCollectionMethodology: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class DataItemAddressType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None


class DataItemPType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    proprietaryDataType: Optional[CodeValueType] = None
    proprietaryOutputFormat: Optional[CodeValueType] = None
    proprietaryInfo: Optional[ProprietaryInfoType] = None


class DataItemType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableReference: Optional[Reference] = None
    physicalLocation: Optional[PhysicalLocationType] = None


class DateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    simpleDate: Optional[CogsDate] = None
    historicalDate: Optional[HistoricalDateType] = None
    startDate: Optional[CogsDate] = None
    historicalStartDate: Optional[HistoricalDateType] = None
    endDate: Optional[CogsDate] = None
    historicalEndDate: Optional[HistoricalDateType] = None
    cycle: Optional[int] = None


class DebriefingProcessType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    isRequired: Optional[bool] = None


class DefiningCharacteristicType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    characteristic: Optional[CodeValueType] = None
    geographicTime: Optional[DateType] = None


class DevelopmentObjectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    questionReference: Optional[List[Reference]] = Field(None, min_length=0)
    measurementReference: Optional[List[Reference]] = Field(None, min_length=0)
    instrumentReference: Optional[List[Reference]] = Field(None, min_length=0)
    controlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)


class DeviationFromSampleDesignType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfDeviationFromSampleDesign: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class DynamicTextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    textContent: Optional[List[TextContentType]] = Field(None, min_length=0)
    isStructureRequired: Optional[bool] = None
    audienceLanguage: Optional[Language] = None


class EmailType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    internetEmail: Optional[str] = None
    emailTypeCode: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None


class ExPostEvaluationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfEvaluation: Optional[List[CodeValueType]] = Field(None, min_length=0)
    evaluator: Optional[List[EvaluatorType]] = Field(None, min_length=0)
    evaluationProcess: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    outcomes: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    completionDate: Optional[CogsDate] = None


class ExternalCategoryRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    externalCategoryReference: Optional[AnyURI] = None
    usageDescription: Optional[StructuredStringType] = None


class FundingInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    agencyOrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)
    funderRole: Optional[CodeValueType] = None
    grantNumber: Optional[List[str]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    fundingDocumentReference: Optional[Reference] = None
    fundingPeriod: Optional[DateType] = None


class GeographicBoundaryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    areaCoverage: Optional[List[AreaCoverageType]] = Field(None, min_length=0)
    boundingBox: Optional[BoundingBoxType] = None
    boundingPolygon: Optional[List[PolygonType]] = Field(None, min_length=0)
    excludingPolygon: Optional[List[PolygonType]] = Field(None, min_length=0)
    geographicTime: Optional[DateType] = None


class GridAttachmentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    specificCellCoordinate: Optional[List[str]] = Field(None, min_length=0)
    cellCoordinatesAsDefined: Optional[List[CellCoordinatesAsDefinedType]] = Field(
        None, min_length=0
    )
    allCells: Optional[bool] = None


class GridResponseDomainInMixedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    responseDomain: Optional[RepresentationType] = None
    responseDomainReference: Optional[Reference] = None
    responseAttachmentLocation: Optional[AttachmentLocationType] = None
    gridAttachment: Optional[List[GridAttachmentType]] = Field(None, min_length=0)
    attachmentBase: Optional[int] = None


class IndividualLanguageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    language: Optional[CodeValueType] = None
    read: Optional[CodeValueType] = None
    write: Optional[CodeValueType] = None
    speak: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None


class InstantMessagingType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    iMIdentification: Optional[str] = None
    typeOfInstantMessaging: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None
    privacy: Optional[str] = None
    isPreferred: Optional[bool] = None


class InstructionAttachmentLocationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attachmentLocation: Optional[List[AttachmentLocationType]] = Field(
        None, min_length=0
    )
    gridAttachment: Optional[List[GridAttachmentType]] = Field(None, min_length=0)
    attachToLabel: Optional[bool] = None
    attachToQuestionText: Optional[bool] = None


class InternationalStringType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    string: Optional[List[StringType]] = Field(None, min_length=0)


class ItemMapType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    sourceItemReference: Optional[Reference] = None
    targetItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    correspondence: Optional[CorrespondenceType] = None
    relatedMapReference: Optional[List[ItemMapType]] = None
    alias: Optional[str] = None


class ItemSetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    itemValue: Optional[List[ItemValueType]] = Field(None, min_length=0)


class LabelType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfLabel: Optional[CodeValueType] = None
    locationVariant: Optional[str] = None
    validForStartDate: Optional[CogsDate] = None
    validForEndDate: Optional[CogsDate] = None
    maxLength: Optional[NonNegativeInteger] = None


class LanguageAbilitySoughtType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    minimumLanguageAbility: Optional[IndividualLanguageType] = None
    preferredLanguageAbility: Optional[IndividualLanguageType] = None


class LevelType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    levelName: Optional[List[NameType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    categoryRelationship: Optional[str] = None
    intervalIncrement: Optional[BasicIncrementType] = None
    levelNumber: Optional[NonNegativeInteger] = None


class LimitedCodeSegmentCapturedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    arrayBase: Optional[int] = None
    startPosition: Optional[NonNegativeInteger] = None
    length: Optional[NonNegativeInteger] = None


class LinkingMapType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    localObjectReference_IdentifiableType: Optional[IdentifiableType] = None
    localObjectReference_Versionable: Optional[Reference] = None
    depositoryObjectReference_IdentifiableType: Optional[IdentifiableType] = None
    depositoryObjectReference_Versionable: Optional[Reference] = None
    relationshipAction: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class LocationNameType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    effectivePeriod: Optional[DateType] = None


class MeasureTType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    measureDimensionValue: Optional[List[MeasureDimensionValueType]] = Field(
        None, min_length=0
    )
    physicalTableLocation: Optional[PhysicalTableLocationType] = None


class MeasureType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    measureDefinitionReference: Optional[List[MeasureDefinitionType]] = Field(
        None, min_length=0
    )
    physicalLocation: Optional[PhysicalLocationType] = None


class MetadataQualityType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfMetadataQuality: Optional[CodeValueType] = None
    measurePurpose: Optional[StructuredStringType] = None
    measureValue: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class MethodOfAdministrationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfAdministrationMethod: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class ModeOfCollectionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfModeOfCollection: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None


class ModeOfPretestCollectionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfPretestCollectionMode: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    methodOfDelivery: Optional[CodeValueType] = None
    isPrimary: Optional[bool] = None
    isAudioFormatAvailable: Optional[bool] = None
    isRecordedInterview: Optional[bool] = None


class NCubesInRecordType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variablesInRecord: Optional[VariablesInRecordType] = None
    nCubeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    nCubeReference: Optional[List[Reference]] = Field(None, min_length=0)
    allNCubesInLogicalProduct: Optional[bool] = None


class NumberRangeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    low: Optional[NumberRangeValueType] = None
    lowDouble: Optional[DoubleNumberRangeValueType] = None
    high: Optional[NumberRangeValueType] = None
    highDouble: Optional[DoubleNumberRangeValueType] = None
    topCode: Optional[float] = None
    topCodeDouble: Optional[float] = None
    bottomCode: Optional[float] = None
    bottomCodeDouble: Optional[float] = None
    regExp: Optional[str] = None


class NumericRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    numberRange: Optional[List[NumberRangeType]] = Field(None, min_length=0)
    numericTypeCode: Optional[CodeValueType] = None
    format: Optional[str] = None
    scale: Optional[int] = None
    decimalPositions: Optional[int] = None
    interval_IntervalType: Optional[NonNegativeInteger] = None
    accuracy: Optional[float] = None


class OperationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    agencyOrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)


class OrganizationNameType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    abbreviation: Optional[InternationalStringType] = None
    typeOfOrganizationName: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None
    isFormal: Optional[bool] = None


class ParameterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    parameterName: Optional[List[NameType]] = Field(None, min_length=0)
    alias: Optional[str] = None
    description: Optional[StructuredStringType] = None
    valueRepresentation: Optional[RepresentationType] = None
    valueRepresentationReference: Optional[Reference] = None
    defaultValue: Optional[ValueType] = None
    isArray: Optional[bool] = None


class PopulationSizeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    primaryPopulation: Optional[SizeType] = None
    secondaryPopulation: Optional[List[SizeType]] = Field(None, min_length=0)


class PopulationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    universeReference: Optional[List[Reference]] = Field(None, min_length=0)


class PretestAdministrationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    methodOfAdministration: Optional[MethodOfAdministrationType] = None
    modeOfPretestCollection: Optional[List[ModeOfPretestCollectionType]] = Field(
        None, min_length=0
    )
    additionalDataCollection: Optional[List[AdditionalDataCollectionType]] = Field(
        None, min_length=0
    )


class PrivateImageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    effectivePeriod: Optional[DateType] = None
    privacy: Optional[str] = None


class RangeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    collationAlgorithm: Optional[CodeValueType] = None
    rangeUnit: Optional[str] = None
    minimumValue: Optional[RangeValueType] = None
    maximumValue: Optional[RangeValueType] = None


class RankingDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class RecommendedStaffRequirementsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    staffClass: Optional[CodeValueType] = None
    participantRequirements: Optional[StructuredStringType] = None
    recruitmentProcess: Optional[StructuredStringType] = None


class RecordSetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableOrder: Optional[VariableOrderType] = None
    record: Optional[List[RecordType]] = Field(None, min_length=0)


class RelationshipType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    relatedToReference_IdentifiableType: Optional[IdentifiableType] = None
    relatedToReference_Versionable: Optional[Reference] = None
    relationshipDescription: Optional[StructuredStringType] = None
    typeOfRelationship: Optional[CodeValueType] = None


class RequirementsAssessmentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfRequirementsAssessment: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    isSatisfied: Optional[bool] = None


class ResearcherIDType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfID: Optional[CodeValueType] = None
    researcherIdentification: Optional[str] = None
    uRI: Optional[AnyURI] = None
    description: Optional[StructuredStringType] = None
    effectivePeriod: Optional[DateType] = None


class ResourceUsedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfResource: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    resourceObjectReference: Optional[Reference] = None
    resourceUsage: Optional[StructuredStringType] = None


class ResponseDomainInMixedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    responseDomain: Optional[List[RepresentationType]] = Field(None, min_length=0)
    responseDomainReference: Optional[List[Reference]] = Field(None, min_length=0)
    attachmentLocation: Optional[AttachmentLocationType] = None
    attachmentBase: Optional[int] = None


class ResponseRateType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    sampleSize: Optional[NonNegativeInteger] = None
    numberOfResponses: Optional[NonNegativeInteger] = None
    specificResponseRate: Optional[float] = None
    description: Optional[StructuredStringType] = None


class ResponseTextSetType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    responseText: Optional[List[DynamicTextType]] = Field(None, min_length=0)


class ResultDetailType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfResult: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    resultsDate: Optional[DateType] = None
    requirementsAssessment: Optional[List[RequirementsAssessmentType]] = Field(
        None, min_length=0
    )


class SamplingProcedureType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfSamplingProcedure: Optional[CodeValueType] = None
    description: Optional[StructuredStringType] = None
    samplingPlanReference: Optional[Reference] = None
    sampleReference: Optional[Reference] = None


class ScaleDimensionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    numberRange: Optional[NumberRangeType] = None
    range: Optional[RangeType] = None
    anchor: Optional[List[AnchorType]] = Field(None, min_length=0)
    markedIncrement: Optional[BasicIncrementType] = None
    valueIncrement: Optional[BasicIncrementType] = None
    dimensionNumber: Optional[NonNegativeInteger] = None
    degreeSlopeFromHorizontal: Optional[int] = None


class ScaleDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class ScaleRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    scaleDimension: Optional[List[ScaleDimensionType]] = Field(None, min_length=0)
    dimensionIntersect: Optional[List[DimensionIntersectType]] = Field(
        None, min_length=0
    )
    displayLayout: Optional[CodeValueType] = None


class SegmentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    textual: Optional[List[TextualType]] = Field(None, min_length=0)
    audio: Optional[List[AudioType]] = Field(None, min_length=0)
    video: Optional[List[VideoType]] = Field(None, min_length=0)
    xML: Optional[List[str]] = Field(None, min_length=0)
    imageArea: Optional[List[ImageAreaType]] = Field(None, min_length=0)


class SeriesStatementType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    seriesRepositoryLocation: Optional[List[AnyURI]] = Field(None, min_length=0)
    seriesName: Optional[List[NameType]] = Field(None, min_length=0)
    seriesAbbreviation: Optional[List[CodeValueType]] = Field(None, min_length=0)
    seriesDescription: Optional[StructuredStringType] = None


class SimilarConceptType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    similarConceptReference: Optional[Reference] = None
    difference: Optional[StructuredStringType] = None


class SoftwareType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    softwareName: Optional[List[NameType]] = Field(None, min_length=0)
    softwarePackage: Optional[CodeValueType] = None
    softwareVersion: Optional[str] = None
    description: Optional[StructuredStringType] = None
    date: Optional[DateType] = None
    function: Optional[List[CodeValueType]] = Field(None, min_length=0)
    lang: Optional[Language] = None


class StratificationRationaleType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    universeReference: Optional[List[Reference]] = Field(None, min_length=0)


class StratificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    stratificationRationale: Optional[StratificationRationaleType] = None
    allocationMethod: Optional[StructuredStringType] = None
    strataNumber: Optional[NonNegativeInteger] = None


class StructuredMixedGridResponseDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    gridResponseDomainInMixed: Optional[List[GridResponseDomainInMixedType]] = Field(
        None, min_length=0
    )
    noDataByDefinition: Optional[List[GridAttachmentType]] = Field(None, min_length=0)


class StructuredMixedResponseDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    responseTextSet: Optional[List[ResponseTextSetType]] = Field(None, min_length=0)
    responseDomainInMixed: Optional[List[ResponseDomainInMixedType]] = Field(
        None, min_length=0
    )


class TelephoneType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    telephoneNumber: Optional[str] = None
    typeOfTelephone: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None
    privacy: Optional[str] = None
    isPreferred: Optional[bool] = None


class TextDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class TranslatorRequirementsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    translationSourceLanguageAbility: Optional[LanguageAbilitySoughtType] = None
    translationTargetLanguageAbility: Optional[LanguageAbilitySoughtType] = None


class UsedType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    alternateName: Optional[InternationalStringType] = None
    description: Optional[StructuredStringType] = None
    instructions: Optional[StructuredStringType] = None
    defaultValue: Optional[ValueType] = None
    isRequired: Optional[bool] = None
    xpath: Optional[str] = None
    limitMaxOccurs: Optional[str] = None
    fixedValue: Optional[bool] = None


class VariableCategoryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    categoryValue: Optional[CategoryValueType] = None
    categoryStatistic: Optional[List[CategoryStatisticType]] = Field(None, min_length=0)


class VersionDistinctionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    versionDistinctionName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    effectivePeriod: Optional[DateType] = None
    regExp: Optional[str] = None


class VersionRationaleType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    rationaleDescription: Optional[InternationalStringType] = None
    rationaleCode: Optional[CodeValueType] = None


class VocabularyType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    vocabularyTitle: Optional[InternationalStringType] = None
    abbreviation: Optional[List[InternationalStringType]] = Field(None, min_length=0)
    keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    uRI: Optional[AnyURI] = None
    xMLURI: Optional[AnyURI] = None
    scheme: Optional[str] = None
    schemeURI: Optional[AnyURI] = None
    comments: Optional[List[StructuredStringType]] = Field(None, min_length=0)


class ActionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    regionOfAction: Optional[SegmentType] = None
    description: Optional[StructuredStringType] = None
    regExp: Optional[str] = None


class AdditionalInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    effectivePeriod: Optional[DateType] = None
    privacy: Optional[str] = None


class AddressType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfAddress: Optional[CodeValueType] = None
    line: Optional[List[str]] = Field(None, min_length=0)
    cityPlaceLocal: Optional[str] = None
    stateProvince: Optional[str] = None
    postalCode: Optional[str] = None
    countryCode: Optional[CountryCodeType] = None
    geographicPoint: Optional[PointType] = None
    timeZone: Optional[CodeValueType] = None
    effectivePeriod: Optional[DateType] = None
    privacy: Optional[str] = None
    isPreferred: Optional[bool] = None


class ApplicationDetailsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    samplingStageReference: Optional[Reference] = None
    sampleFrameReference: Optional[Reference] = None
    frameLimitations: Optional[StructuredStringType] = None
    targetSampleSize: Optional[List[TargetSampleSizeType]] = Field(None, min_length=0)
    dateOfSample: Optional[DateType] = None
    responsibleForSamplingReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class AttachedInstructionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    interviewerInstructionReference: Optional[Reference] = None
    interviewerInstructionAttachmentLocation: Optional[
        InstructionAttachmentLocationType
    ] = None
    isDisplayed: Optional[bool] = None


class BasedOnObjectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    basedOnReference: Optional[List[Reference]] = Field(None, min_length=0)
    basedOnRationaleDescription: Optional[InternationalStringType] = None
    basedOnRationaleCode: Optional[CodeValueType] = None


class BindingType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    sourceParameterReference: Optional[ParameterType] = None
    targetParameterReference: Optional[ParameterType] = None


class CategoryDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class CellLabelType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    gridAttachment: Optional[List[GridAttachmentType]] = Field(None, min_length=0)


class CitationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    title: Optional[InternationalStringType] = None
    subTitle: Optional[List[InternationalStringType]] = Field(None, min_length=0)
    alternateTitle: Optional[List[InternationalStringType]] = Field(None, min_length=0)
    creator: Optional[List[CreatorType]] = Field(None, min_length=0)
    publisher: Optional[List[PublisherType]] = Field(None, min_length=0)
    contributor: Optional[List[ContributorType]] = Field(None, min_length=0)
    publicationDate: Optional[DateType] = None
    language: Optional[List[CodeValueType]] = Field(None, min_length=0)
    internationalIdentifier: Optional[List[InternationalIdentifierType]] = Field(
        None, min_length=0
    )
    copyright: Optional[List[InternationalStringType]] = Field(None, min_length=0)
    dublinCoreAbstract: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAccessRights: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAccrualMethod: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAccrualPeriodicity: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAccrualPolicy: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAlternative: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAudience: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreAvailable: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreBibliographicCitation: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreConformsTo: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreContributor: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreCoverage: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreCreated: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreCreator: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreDate: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreDateAccepted: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreDateCopyrighted: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreDateSubmitted: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreDescription: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreEducationLevel: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreExtent: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreFormat: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreHasFormat: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreHasPart: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreHasVersion: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIdentifier: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreInstructionalMethod: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsFormatOf: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsPartOf: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsReferencedBy: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsReplacedBy: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsRequiredBy: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIsVersionOf: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreIssued: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreLanguage: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreLicense: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreMediator: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreMedium: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreModified: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreProvenance: Optional[List[str]] = Field(None, min_length=0)
    dublinCorePublisher: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreReferences: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreRelation: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreReplaces: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreRequires: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreRights: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreRightsHolder: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreSource: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreSpatial: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreSubject: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreTableOfContents: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreTemporal: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreTitle: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreType: Optional[List[str]] = Field(None, min_length=0)
    dublinCoreValid: Optional[List[str]] = Field(None, min_length=0)


class ClassificationIndexEntryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    entryText: Optional[InternationalStringType] = None
    codesClassificationItemReference: Optional[Reference] = None
    validFrom: Optional[CogsDate] = None
    validTo: Optional[CogsDate] = None
    codingInstructions: Optional[StructuredStringType] = None


class CodeDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None
    displayCode: Optional[bool] = None


class CohortType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    categoryReference: Optional[List[Reference]] = Field(None, min_length=0)
    codeReference: Optional[List[CodeType]] = Field(None, min_length=0)
    range: Optional[List[RangeType]] = Field(None, min_length=0)
    rank: Optional[NonNegativeInteger] = None


class CommandFileType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    programLanguage: Optional[CodeValueType] = None
    inParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    outParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    binding: Optional[List[BindingType]] = Field(None, min_length=0)
    location: Optional[InternationalStringType] = None
    uRI: Optional[AnyURI] = None


class CommandType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    programLanguage: Optional[CodeValueType] = None
    inParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    outParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    binding: Optional[List[BindingType]] = Field(None, min_length=0)
    commandContent: Optional[str] = None


class ConditionalResultType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    text: Optional[List[TextType]] = Field(None, min_length=1)
    sourceParameterReference: Optional[ParameterType] = None


class ContactInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    locationName: Optional[List[LocationNameType]] = Field(None, min_length=0)
    address: Optional[List[AddressType]] = Field(None, min_length=0)
    telephone: Optional[List[TelephoneType]] = Field(None, min_length=0)
    url: Optional[List[UrlType]] = Field(None, min_length=0)
    email: Optional[List[EmailType]] = Field(None, min_length=0)
    instantMessaging: Optional[List[InstantMessagingType]] = Field(None, min_length=0)
    regionalCoverage: Optional[CodeValueType] = None
    typeOfLocation: Optional[CodeValueType] = None
    privacy: Optional[str] = None


class ContentLinkingMapType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    linkingMap: Optional[List[LinkingMapType]] = Field(None, min_length=0)


class CoordinateRegionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    universeReference: Optional[List[Reference]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    dimensionValue: Optional[List[CohortType]] = Field(None, min_length=0)


class CostStructureType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    budget: Optional[List[BudgetType]] = Field(None, min_length=0)
    fundingInformation: Optional[List[FundingInformationType]] = Field(
        None, min_length=0
    )


class CreateSummaryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    label: Optional[LabelType] = None


class DataAppraisalInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    responseRate: Optional[List[ResponseRateType]] = Field(None, min_length=0)
    samplingError: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    otherAppraisalProcess: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )


class DataFileIdentificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    location: Optional[InternationalStringType] = None
    dataFileURI: Optional[URIType] = None
    sizeInBytes: Optional[NonNegativeInteger] = None
    isMaster: Optional[bool] = None


class DataFileVersionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfVersionNumber: Optional[str] = None
    versionResponsibility: Optional[str] = None
    versionResponsibilityReference: Optional[Reference] = None
    versionRationale: Optional[VersionRationaleType] = None
    versionNumber: Optional[str] = None
    versionDate: Optional[CogsDate] = None


class DateTimeDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class DateTimeRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    dateFieldFormat: Optional[CodeValueType] = None
    dateTypeCode: Optional[CodeValueType] = None
    range: Optional[List[RangeType]] = Field(None, min_length=0)
    regExp: Optional[str] = None


class DistributionDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class EmbargoType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    embargoName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    date: Optional[DateType] = None
    rationale: Optional[StructuredStringType] = None
    agencyOrganizationReference: Optional[Reference] = None
    enforcementAgencyOrganizationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class ExternalInterviewerInstructionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    otherMaterialReference: Optional[Reference] = None
    instructionAttachmentLocation: Optional[List[InstructionAttachmentLocationType]] = (
        Field(None, min_length=0)
    )
    isDisplayed: Optional[bool] = None


class FilterVariableCategoryType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    filterCategoryValue: Optional[CategoryValueType] = None
    variableCategory: Optional[List[VariableCategoryType]] = Field(None, min_length=0)


class FixedCellValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    value: Optional[ValueType] = None
    gridAttachment: Optional[List[GridAttachmentType]] = Field(None, min_length=0)


class FormType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    formNumber: Optional[str] = None
    uRI: Optional[AnyURI] = None
    statement: Optional[InternationalStringType] = None
    isRequired: Optional[bool] = None


class GeographicDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None


class GeographicLocationCodeDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None
    displayCode: Optional[bool] = None


class GeographicRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    datum: Optional[CodeValueType] = None
    coordinateSystem: Optional[CodeValueType] = None
    coordinateZone: Optional[CodeValueType] = None
    coordinateSource: Optional[CodeValueType] = None
    errorCorrection: Optional[CodeValueType] = None
    offset: Optional[str] = None
    georeferencedObject: Optional[CodeValueType] = None
    addressMatchType: Optional[CodeValueType] = None
    coordinatePairs: Optional[List[CoordinatePairsType]] = Field(None, min_length=0)
    alternateOffset: Optional[TextDomainType] = None
    alternateObject: Optional[TextDomainType] = None
    alternateCoordinateSystem: Optional[TextDomainType] = None
    pointFormat: Optional[str] = None
    spatialPrimitive: Optional[str] = None


class GeographicStructureCodeDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None
    displayCode: Optional[bool] = None


class GrossFileStructureType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    placeOfProduction: Optional[str] = None
    processingCheck: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    processingStatus: Optional[CodeValueType] = None
    creationSoftware: Optional[SoftwareType] = None
    caseQuantity: Optional[NonNegativeInteger] = None
    overallRecordCount: Optional[NonNegativeInteger] = None


class IncludedCodeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    codeReference: Optional[List[CodeType]] = Field(None, min_length=0)
    range: Optional[List[RangeType]] = Field(None, min_length=0)


class IndividualNameType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    prefix: Optional[str] = None
    firstGiven: Optional[str] = None
    middle: Optional[List[str]] = Field(None, min_length=0)
    lastFamily: Optional[str] = None
    suffix: Optional[str] = None
    fullName: Optional[InternationalStringType] = None
    effectivePeriod: Optional[DateType] = None
    abbreviation: Optional[InternationalStringType] = None
    typeOfIndividualName: Optional[CodeValueType] = None
    sex: Optional[str] = None
    isPreferred: Optional[bool] = None
    context: Optional[str] = None
    isFormal: Optional[bool] = None


class LifecycleEventType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    eventType: Optional[CodeValueType] = None
    date: Optional[DateType] = None
    agencyOrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    relationship: Optional[List[RelationshipType]] = Field(None, min_length=0)


class LifecycleInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lifecycleEvent: Optional[List[LifecycleEventType]] = Field(None, min_length=0)


class LocalAddedContentType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contentLinkingMap: Optional[ContentLinkingMapType] = None
    localStudyUnitContentReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    localGroupContentReference: Optional[List[Reference]] = Field(None, min_length=0)
    localResourcePackageContentReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class LocationDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class LocationRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    object: Optional[CodeValueType] = None
    action: Optional[List[ActionType]] = Field(None, min_length=0)


class LogicalRecordType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    logicalRecordName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    variableValueReference: Optional[VariableValueReferenceType] = None
    supportForMultipleSegments: Optional[VariableValueReferenceType] = None
    caseIdentification: Optional[List[CaseIdentificationType]] = Field(
        None, min_length=0
    )
    variablesInRecord: Optional[VariablesInRecordType] = None
    nCubesInRecord: Optional[NCubesInRecordType] = None
    defaultMissingValues: Optional[DefaultMissingValuesType] = None
    hasLocator: Optional[bool] = None
    variableQuantity: Optional[NonNegativeInteger] = None


class NominalDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class NoteType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    typeOfNote: Optional[CodeValueType] = None
    noteSubject: Optional[CodeValueType] = None
    relationship: Optional[List[RelationshipType]] = Field(None, min_length=0)
    responsibility: Optional[str] = None
    header: Optional[InternationalStringType] = None
    noteContent: Optional[StructuredStringType] = None
    proprietaryInfo: Optional[ProprietaryInfoType] = None
    lang: Optional[Language] = None


class NumericDomainType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    outParameter: Optional[ParameterType] = None
    responseCardinality: Optional[ResponseCardinalityType] = None
    contentDateOffset: Optional[ContentDateOffsetType] = None


class OrganizationIdentificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    organizationName: Optional[List[OrganizationNameType]] = Field(None, min_length=0)
    dDIMaintenanceAgencyID: Optional[List[DDIMaintenanceAgencyIDType]] = Field(
        None, min_length=0
    )
    organizationImage: Optional[List[PrivateImageType]] = Field(None, min_length=0)


class OriginType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    citation: Optional[CitationType] = None
    originLocation: Optional[AnyURI] = None


class RecordRelationshipType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    recordRelationshipName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    sourceLogicalRecordReference: Optional[LogicalRecordType] = None
    targetLogicalRecordReference: Optional[LogicalRecordType] = None
    sourceTargetLink: Optional[List[SourceTargetLinkType]] = Field(None, min_length=0)
    relationToTarget: Optional[str] = None


class RoleType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    effectivePeriod: Optional[List[DateType]] = Field(None, min_length=0)
    additionalInformation: Optional[List[AdditionalInformationType]] = Field(
        None, min_length=0
    )
    privacy: Optional[str] = None


class TargetObjectType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    organizationReference: Optional[Reference] = None
    individualReference: Optional[Reference] = None
    role: Optional[List[RoleType]] = Field(None, min_length=0)


class UnfilteredCategoryStatisticsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    variableCategory: Optional[List[VariableCategoryType]] = Field(None, min_length=0)


class Agent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None


class ApprovalReview(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfApprovalReview: Optional[List[CodeValueType]] = Field(None, min_length=0)
    ReviewObjectReference: Optional[List[Reference]] = Field(None, min_length=0)
    AgencyOrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)
    ReviewerRole: Optional[CodeValueType] = None
    ReferenceIdentifier: Optional[List[str]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ApprovalReviewDocumentReference: Optional[Reference] = None
    ApplicationDate: Optional[DateType] = None
    ApprovalDate: Optional[DateType] = None
    ApprovedPeriod: Optional[DateType] = None


class BaseRecordLayout(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None


class CategoryGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfCategoryGroup: Optional[CodeValueType] = None
    CategoryGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DefiningCategoryReference: Optional[Reference] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    CategoryReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategoryGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class CategoryScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    CategorySchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    CategorySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategoryReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategoryGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class ClassificationCorrespondenceTable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    OwnerReference: Optional[List[Reference]] = Field(None, min_length=0)
    MaintenanceUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    ContactPersonReference: Optional[List[Reference]] = Field(None, min_length=0)
    Publication: Optional[List[PublicationType]] = Field(None, min_length=0)
    SourceClassificationReference: Optional[Reference] = None
    TargetClassificationReference: Optional[List[Reference]] = Field(None, min_length=0)
    SourceLevelReference: Optional[Reference] = None
    TargetLevelReference: Optional[Reference] = None
    RelationshipMappingType: Optional[CodeValueType] = None
    Maps: Optional[List[ClassificationMapType]] = Field(None, min_length=0)
    FloatingMapDate: Optional[CogsDate] = None


class ClassificationFamily(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ClassificationSeriesReference: Optional[List[Reference]] = Field(None, min_length=0)


class ClassificationIndex(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ReleaseDate: Optional[CogsDate] = None
    MaintenanceUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    ContactPersonReference: Optional[List[Reference]] = Field(None, min_length=0)
    Publication: Optional[List[PublicationType]] = Field(None, min_length=0)
    Languages: Optional[List[Language]] = Field(None, min_length=0)
    Corrections: Optional[StructuredStringType] = None
    CodingInstructions: Optional[StructuredStringType] = None
    ClassificationIndexEntry: Optional[List[ClassificationIndexEntryType]] = Field(
        None, min_length=0
    )


class ClassificationItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ItemCode: Optional[str] = None
    DefiningConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    Includes: Optional[StructuredStringType] = None
    IncludesAlso: Optional[StructuredStringType] = None
    Excludes: Optional[StructuredStringType] = None
    ExcludedClassificationItemReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsGenerated: Optional[bool] = None
    IsValid: Optional[bool] = None
    ValidFrom: Optional[CogsDate] = None
    ValidTo: Optional[CogsDate] = None
    FutureEvents: Optional[StructuredStringType] = None
    SuccessorClassificationItemReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ChangesFromPriorVersion: Optional[StructuredStringType] = None
    Updates: Optional[StructuredStringType] = None
    ParentClassificationItemReference: Optional[Reference] = None
    CaseLaw: Optional[List[CaseLawType]] = Field(None, min_length=0)


class ClassificationLevel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    LevelCodeType: Optional[CodeValueType] = None
    LevelCodeStructure: Optional[CodeValueType] = None
    DummyCode: Optional[StructuredStringType] = None
    DefiningConceptReference: Optional[List[Reference]] = Field(None, min_length=0)


class ClassificationSeries(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    SeriesContext: Optional[CodeValueType] = None
    UnitTypeClassifiedReference: Optional[Reference] = None
    SubjectArea: Optional[List[CodeValueType]] = Field(None, min_length=0)
    OwnerReference: Optional[List[Reference]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    StatisticalClassificationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    CurrentStatisticalClassificationReference: Optional[Reference] = None


class CodeList(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    CodeListName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    CodeListReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategorySchemeReference: Optional[Reference] = None
    HierarchyType: Optional[str] = None
    Level: Optional[List[LevelType]] = Field(None, min_length=0)
    Code: Optional[List[CodeType]] = Field(None, min_length=0)
    IsSystemMissingValue: Optional[bool] = None


class CodeListGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfCodeListGroup: Optional[CodeValueType] = None
    CodeListGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    CodeListReference: Optional[List[Reference]] = Field(None, min_length=0)
    CodeListGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class CodeListScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    CodeListSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    CodeListSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    CodeListReference: Optional[List[Reference]] = Field(None, min_length=0)
    CodeListGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class CognitiveExpertReviewActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    TypeOfCognitiveExpertReview: Optional[CodeValueType] = None


class CognitiveInterviewActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    TypeOfCognitiveInterview: Optional[CodeValueType] = None


class Comparison(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ComparisonName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategoryMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    RepresentationMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseMapReference: Optional[List[Reference]] = Field(None, min_length=0)
    ManagedItemMapReference: Optional[List[Reference]] = Field(None, min_length=0)


class Concept(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConceptName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    SimilarConcept: Optional[List[SimilarConceptType]] = Field(None, min_length=0)
    SubclassOfReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExcludesConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    IncludesConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsCharacteristic: Optional[bool] = None


class ConceptGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfConceptGroup: Optional[CodeValueType] = None
    ConceptGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    GroupingUniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    GroupingConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None
    IsAdministrativeOnly: Optional[bool] = None
    IsConcept: Optional[bool] = None


class ConceptScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ConceptSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    Vocabulary: Optional[VocabularyType] = None
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class ConceptualVariable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConceptualVariableName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptReference: Optional[Reference] = None
    UnitTypeReference: Optional[Reference] = None
    CategorySchemeReference: Optional[Reference] = None


class ConceptualVariableGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfConceptualVariableGroup: Optional[CodeValueType] = None
    ConceptualVariableGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    ConceptualVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualVariableGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class ConceptualVariableScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ConceptualVariableSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptualVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ConceptualVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualVariableGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class ContentReviewActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    TypeOfContentReview: Optional[CodeValueType] = None


class ControlConstruct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)


class ControlConstructGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfControlConstructGroup: Optional[CodeValueType] = None
    ControlConstructGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)
    ControlConstructGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class ControlConstructScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ControlConstructSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ControlConstructSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)
    ControlConstructGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class DataCaptureDevelopment(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DataCaptureDevelopmentName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DevelopmentPlanReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentImplementationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)


class DataRelationship(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DataRelationshipName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    LogicalRecord: Optional[List[LogicalRecordType]] = Field(None, min_length=0)
    RecordRelationship: Optional[List[RecordRelationshipType]] = Field(
        None, min_length=0
    )


class DataSet(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None
    ArrayBase: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DataSetName: Optional[List[NameType]] = Field(None, min_length=0)
    IdentifyingVariableReference: Optional[Reference] = None
    DefaultVariableSchemeReference: Optional[Reference] = None
    RecordSet: Optional[RecordSetType] = None
    ItemSet: Optional[ItemSetType] = None
    VariableSet: Optional[VariableSetType] = None


class DDIProfile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    DDIProfileName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ApplicationOfProfile: Optional[List[CodeValueType]] = Field(None, min_length=0)
    Purpose: Optional[StructuredStringType] = None
    XPathVersion: Optional[float] = None
    DDINamespace: Optional[float] = None
    XMLPrefixMap: Optional[List[XMLPrefixMapType]] = Field(None, min_length=0)
    Instructions: Optional[StructuredStringType] = None
    Used: Optional[UsedType] = None
    NotUsed: Optional[NotUsedType] = None


class Describable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None


class DevelopmentActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None


class DevelopmentActivityGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfDevelopmentActivityGroup: Optional[CodeValueType] = None
    DevelopmentActivityGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    DevelopmentActivityReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentActivityGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class DevelopmentActivityScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    DevelopmentActivitySchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DevelopmentActivitySchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    DevelopmentActivityReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentActivityGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class DevelopmentImplementation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentImplementationName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DevelopmentPlanReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentActivityReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentObject: Optional[List[DevelopmentObjectType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)


class DevelopmentPlan(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentPlanName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DevelopmentObjective: Optional[StructuredStringType] = None
    ContactReference: Optional[List[Reference]] = Field(None, min_length=0)
    CostStructure: Optional[List[CostStructureType]] = Field(None, min_length=0)
    DevelopmentActivityReference: Optional[List[Reference]] = Field(None, min_length=0)


class DevelopmentResults(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentResultsName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DevelopmentImplementationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ResultsDate: Optional[DateType] = None
    ResultDetail: Optional[List[ResultDetailType]] = Field(None, min_length=0)


class DevelopmentStep(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentObject: Optional[List[DevelopmentObjectType]] = Field(None, min_length=0)
    DevelopmentActivityReference: Optional[List[Reference]] = Field(None, min_length=0)
    ResponsibleAgencyReference: Optional[List[Reference]] = Field(None, min_length=0)
    Prerequisite: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    ConditionForAcceptance: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )
    ActivityDate: Optional[DateType] = None


class FocusGroupActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    TypeOfFocusGroup: Optional[CodeValueType] = None


class GenericMap(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfMappedItem: Optional[CodeValueType] = None
    MapName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    SourceSchemeReference: Optional[Reference] = None
    TargetSchemeReference: Optional[Reference] = None
    Correspondence: Optional[CorrespondenceType] = None
    ItemMap: Optional[List[ItemMapType]] = Field(None, min_length=0)


class GeographicLocationGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfGeographicLocationGroup: Optional[CodeValueType] = None
    GeographicLocationGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    GeographicLocationReference: Optional[List[Reference]] = Field(None, min_length=0)
    GeographicLocationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class GeographicLocationScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    GeographicLocationSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    GeographicLocationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicLocationReference: Optional[List[Reference]] = Field(None, min_length=0)
    GeographicLocationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class GeographicStructureGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfGeographicStructureGroup: Optional[CodeValueType] = None
    GeographicStructureGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    GeographicStructureReference: Optional[List[Reference]] = Field(None, min_length=0)
    GeographicStructureGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class GeographicStructureScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    GeographicStructureSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    GeographicStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicStructureReference: Optional[List[Reference]] = Field(None, min_length=0)
    GeographicStructureGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class InformationClassification(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    TypeOfInformationClassification: Optional[CodeValueType] = None
    LevelOfInformationClassification: Optional[CodeValueType] = None
    AgencyOrganizationReference: Optional[Reference] = None
    DataHandlingPersonnelRules: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )
    DataEncryptionRules: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )
    DataStorageRules: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    DisposalRules: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    DataTransferRules: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    AuthorizedPolicySource: Optional[List[AuthorizedPolicySourceType]] = Field(
        None, min_length=0
    )


class InLineNCubeRecordLayout(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None
    ArrayBase: Optional[conint(ge=-2147483648, le=2147483648)] = None
    NCubeInstanceIReference: Optional[List[Reference]] = Field(None, min_length=0)


class Instruction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    InstructionName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    AssociatedImage: Optional[List[ImageType]] = Field(None, min_length=0)
    InstructionText: Optional[List[DynamicTextType]] = Field(None, min_length=0)


class InstructionGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfInstructionGroup: Optional[CodeValueType] = None
    InstructionGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    InstructionReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstructionGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class Instrument(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    InstrumentName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    TypeOfInstrument: Optional[CodeValueType] = None
    ExternalInstrumentLocation: Optional[List[AnyURI]] = Field(None, min_length=0)
    ControlConstructReference: Optional[Reference] = None
    FieldedLanguages: Optional[List[CodeValueType]] = Field(None, min_length=0)
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)


class InstrumentGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfInstrumentGroup: Optional[CodeValueType] = None
    InstrumentGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    InstrumentReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstrumentGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class InstrumentScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    InstrumentSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InstrumentSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstrumentReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstrumentGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class InterviewerInstructionScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    InterviewerInstructionSchemeName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InterviewerInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    InstructionReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstructionGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class LocalHoldingPackage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    DepositoryStudyUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    DepositoryGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    DepositoryResourcePackageReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    DefiningConceptReference: Optional[Reference] = None
    LocalAddedContent: Optional[LocalAddedContentType] = None


class Maintainable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None


class ManagedCategoryRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    CategorySchemeReference: Optional[Reference] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedDateTimeRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedDateTimeRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    DateFieldFormat: Optional[CodeValueType] = None
    DateTypeCode: Optional[CodeValueType] = None
    Range: Optional[List[RangeType]] = Field(None, min_length=0)
    RegExp: Optional[str] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedDistributionRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedDistributionRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    DistributionValue: Optional[float] = None
    DecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedExternalCategoryRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    ExternalCategoryReference: Optional[AnyURI] = None
    UsageDescription: Optional[StructuredStringType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedGeographicRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedGeographicRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    Datum: Optional[CodeValueType] = None
    CoordinateSystem: Optional[CodeValueType] = None
    CoordinateZone: Optional[CodeValueType] = None
    CoordinateSource: Optional[CodeValueType] = None
    ErrorCorrection: Optional[CodeValueType] = None
    Offset: Optional[str] = None
    GeoreferencedObject: Optional[CodeValueType] = None
    AddressMatchType: Optional[CodeValueType] = None
    CoordinatePairs: Optional[List[CoordinatePairsType]] = Field(None, min_length=0)
    AlternateOffset: Optional[TextDomainType] = None
    AlternateObject: Optional[TextDomainType] = None
    AlternateCoordinateSystem: Optional[TextDomainType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None
    PointFormat: str
    SpatialPrimitive: str


class ManagedLocationRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedLocationRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    Object: Optional[CodeValueType] = None
    Action: Optional[List[ActionType]] = Field(None, min_length=0)
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedNominalRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedNominalRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    RegExp: Optional[str] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedNumericRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedNumericRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    NumberRange: Optional[List[NumberRangeType]] = Field(None, min_length=0)
    NumericTypeCode: Optional[CodeValueType] = None
    Format: Optional[str] = None
    Scale: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    Interval_IntervalType: Optional[NonNegativeInteger] = None
    ClassificationLevelCode: Optional[CodeValueType] = None
    Accuracy: Optional[float] = None


class ManagedRankingRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedRankingRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    RankingRange: Optional[RankingRangeType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None


class ManagedRepresentationGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfManagedRepresentationGroup: Optional[CodeValueType] = None
    ManagedRepresentationGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    ManagedRepresentationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ManagedRepresentationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class ManagedRepresentationScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ManagedRepresentationSchemeName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ManagedRepresentationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ManagedRepresentationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ManagedRepresentationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class ManagedScaleRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedScaleRepresentationName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    ScaleDimension: Optional[List[ScaleDimensionType]] = Field(None, min_length=0)
    DimensionIntersect: Optional[List[DimensionIntersectType]] = Field(
        None, min_length=0
    )
    DisplayLayout: Optional[CodeValueType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedTextRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedTextRepresentationName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    MaxLength: Optional[NonNegativeInteger] = None
    MinLength: Optional[NonNegativeInteger] = None
    RegExp: Optional[str] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class MeasurementConstruct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementReference: Optional[Reference] = None
    ResponseUnit: Optional[CodeValueType] = None
    AnalysisUnit: Optional[List[CodeValueType]] = Field(None, min_length=0)
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    EstimatedSecondsResponseTime: Optional[float] = None


class MeasurementGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfMeasurementGroup: Optional[CodeValueType] = None
    MeasurementGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    MeasurementItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class MeasurementItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    MeasurementItemName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    TypeOfMeasurementItem: Optional[List[CodeValueType]] = Field(None, min_length=0)
    MeasurementItemIntent: Optional[StructuredStringType] = None
    ResponseDomain: Optional[RepresentationType] = None
    ResponseDomainReference: Optional[Reference] = None
    StructuredMixedResponseDomain: Optional[StructuredMixedResponseDomainType] = None
    ResponseCardinality: Optional[ResponseCardinalityType] = None
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    RepresentedVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    EstimatedSecondsResponseTime: Optional[float] = None


class MeasurementScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    MeasurementSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    MeasurementSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class Methodology(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    MethodologyName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DataCollectionMethodology: Optional[List[DataCollectionMethodologyType]] = Field(
        None, min_length=0
    )
    TimeMethod: Optional[List[TimeMethodType]] = Field(None, min_length=0)
    WeightingMethodologyReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingProcedure: Optional[List[SamplingProcedureType]] = Field(None, min_length=0)
    DeviationFromSampleDesign: Optional[List[DeviationFromSampleDesignType]] = Field(
        None, min_length=0
    )
    DataCollectionSoftware: Optional[List[SoftwareType]] = Field(None, min_length=0)
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)


class NCubeGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfNCubeGroup: Optional[CodeValueType] = None
    NCubeGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    NCubeReference: Optional[List[Reference]] = Field(None, min_length=0)
    NCubeGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class NCubeScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    NCubeSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    NCubeReference: Optional[List[Reference]] = Field(None, min_length=0)
    NCubeGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    NCubeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)


class Organization(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    OrganizationIdentification: Optional[OrganizationIdentificationType] = None
    Description: Optional[StructuredStringType] = None
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    RegionalCoverage: Optional[List[CodeValueType]] = Field(None, min_length=0)
    AdditionalInformation: Optional[List[AdditionalInformationType]] = Field(
        None, min_length=0
    )
    VersionDistinction: Optional[List[VersionDistinctionType]] = Field(
        None, min_length=0
    )
    ContactInformation: Optional[List[ContactInformationType]] = Field(
        None, min_length=0
    )
    Privacy: Optional[str] = None


class OrganizationGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfOrganizationGroup: Optional[CodeValueType] = None
    OrganizationGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    OrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)
    IndividualReference: Optional[List[Reference]] = Field(None, min_length=0)
    RelationReference: Optional[List[Reference]] = Field(None, min_length=0)
    OrganizationGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class OrganizationScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    OrganizationSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    OrganizationSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    OrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)
    IndividualReference: Optional[List[Reference]] = Field(None, min_length=0)
    RelationReference: Optional[List[Reference]] = Field(None, min_length=0)
    OrganizationGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class OtherMaterial(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfMaterial: Optional[CodeValueType] = None
    Description: Optional[StructuredStringType] = None
    Citation: Optional[CitationType] = None
    ExternalURLReference: Optional[List[AnyURI]] = Field(None, min_length=0)
    ExternalURNReference: Optional[AnyURI] = None
    Relationship: Optional[List[RelationshipType]] = Field(None, min_length=0)
    MIMEType: Optional[CodeValueType] = None
    Segment: Optional[List[SegmentType]] = Field(None, min_length=0)
    SizeInBytes: Optional[NonNegativeInteger] = None
    Lang: Optional[Language] = None


class OtherMaterialGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfOtherMaterialGroup: Optional[CodeValueType] = None
    OtherMaterialGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    OtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    OtherMaterialGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class OtherMaterialScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    OtherMaterialSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    OtherMaterialSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    OtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    OtherMaterialGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class PhysicalDataProduct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    PhysicalDataProductName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    PhysicalStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RecordLayoutSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)


class PhysicalInstanceGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    TypeOfPhysicalInstanceGroup: Optional[CodeValueType] = None
    PhysicalInstanceGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    PhysicalInstanceReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class PhysicalStructureGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfPhysicalStructureGroup: Optional[CodeValueType] = None
    PhysicalStructureGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    PhysicalStructureReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalStructureGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class PhysicalStructureScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    PhysicalStructureSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    PhysicalStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    PhysicalStructureReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalStructureGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class PretestActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    SampleFrameReference: Optional[Reference] = None
    SamplingPlanReference: Optional[Reference] = None
    PretestAdministration: Optional[List[PretestAdministrationType]] = Field(
        None, min_length=0
    )


class ProcessingEvent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ProcessingEventName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ControlOperation: Optional[List[OperationType]] = Field(None, min_length=0)
    CleaningOperation: Optional[List[OperationType]] = Field(None, min_length=0)
    WeightingReference: Optional[List[Reference]] = Field(None, min_length=0)
    DataAppraisalInformation: Optional[List[DataAppraisalInformationType]] = Field(
        None, min_length=0
    )
    ProcessingInstructionReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)


class ProcessingEventGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfProcessingEventGroup: Optional[CodeValueType] = None
    ProcessingEventGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    ProcessingEventReference: Optional[List[Reference]] = Field(None, min_length=0)
    ProcessingEventGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class ProcessingEventScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ProcessingEventSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ProcessingEventSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProcessingEventReference: Optional[List[Reference]] = Field(None, min_length=0)
    ProcessingEventGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class ProcessingInstruction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)


class ProcessingInstructionGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfProcessingInstructionGroup: Optional[CodeValueType] = None
    ProcessingInstructionGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    GeneralInstructionReference: Optional[List[Reference]] = Field(None, min_length=0)
    GenerationInstructionReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProcessingInstructionGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class ProcessingInstructionScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ProcessingInstructionSchemeName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ProcessingInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeneralInstructionReference: Optional[List[Reference]] = Field(None, min_length=0)
    GenerationInstructionReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProcessingInstructionGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class ProprietaryRecordLayout(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None
    CharacterSet: Optional[CodeValueType] = None
    ArrayBase: Optional[conint(ge=-2147483648, le=2147483648)] = None
    SystemSoftware: Optional[SoftwareType] = None
    DataItemAddress: Optional[DataItemAddressType] = None
    DefaultNumericDataTypeReference: Optional[Reference] = None
    DefaultTextDataTypeReference: Optional[Reference] = None
    DefaultDateTimeDataTypeReference: Optional[Reference] = None
    CodedDataAsNumeric: Optional[Reference] = None
    CodedDataAsText: Optional[Reference] = None
    DefaultVariableSchemeReference: Optional[Reference] = None
    ProprietaryInfo: Optional[ProprietaryInfoType] = None
    DataItemP: Optional[List[DataItemPType]] = Field(None, min_length=0)


class QualityScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    QualitySchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    QualitySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualityStandardReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualityStatementGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStandardGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class QualityStandard(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    QualityStandardName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    StandardUsed: Optional[StandardUsedType] = None
    ComplianceDefinition: Optional[List[ComplianceDefinitionType]] = Field(
        None, min_length=0
    )


class QualityStandardGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfQualityStandardGroup: Optional[CodeValueType] = None
    QualityStandardGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    QualityStandardReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualityStandardGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class QualityStatement(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    QualityStatementName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    QualityStandardReference: Optional[Reference] = None
    OtherStatementOfQuality: Optional[StructuredStringType] = None
    ComplianceStatement: Optional[StructuredStringType] = None
    Compliance: Optional[List[ComplianceType]] = Field(None, min_length=0)


class QualityStatementGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfQualityStatementGroup: Optional[CodeValueType] = None
    QualityStatementGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualityStatementGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class Question(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)


class QuestionBlock(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionBlockName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    QuestionBlockIntent: Optional[StructuredStringType] = None
    StimulusMaterial: Optional[List[StimulusMaterialType]] = Field(None, min_length=0)
    QuestionItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGridReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionSequence: Optional[QuestionSequenceType] = None
    ResponseCardinality: Optional[ResponseCardinalityType] = None
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    EstimatedSecondsResponseTime: Optional[float] = None


class QuestionGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfQuestionGroup: Optional[CodeValueType] = None
    QuestionGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    QuestionItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGridReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionBlockReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class QuestionItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionItemName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    QuestionText: Optional[List[DynamicTextType]] = Field(None, min_length=0)
    QuestionIntent: Optional[StructuredStringType] = None
    ResponseDomain: Optional[RepresentationType] = None
    ResponseDomainReference: Optional[Reference] = None
    StructuredMixedResponseDomain: Optional[StructuredMixedResponseDomainType] = None
    ResponseCardinality: Optional[ResponseCardinalityType] = None
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    RepresentedVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    EstimatedSecondsResponseTime: Optional[float] = None


class QuestionScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    QuestionSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    QuestionSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionItemReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGridReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionBlockReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class RecordLayout(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None
    CharacterSet: Optional[CodeValueType] = None
    ArrayBase: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DefaultVariableSchemeReference: Optional[Reference] = None
    DataItem: Optional[List[DataItemType]] = Field(None, min_length=0)
    NCubeInstanceReference: Optional[List[Reference]] = Field(None, min_length=0)
    NamesOnFirstRow: Optional[bool] = None


class RecordLayoutGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfRecordLayoutGroup: Optional[CodeValueType] = None
    RecordLayoutGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    RecordLayoutReference: Optional[List[Reference]] = Field(None, min_length=0)
    InLineNCubeRecordLayoutReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProprietaryRecordLayoutReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    TabularNCubeRecordLayoutReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RecordLayoutGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class RecordLayoutScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    RecordLayoutSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecordLayoutSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    RecordLayoutReference: Optional[Reference] = None
    InLineNCubeRecordLayoutReference: Optional[Reference] = None
    TabularNCubeRecordLayoutReference: Optional[Reference] = None
    ProprietaryRecordLayoutReference: Optional[Reference] = None
    RecordLayoutGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class Relation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    SourceObject: Optional[SourceObjectType] = None
    TargetObject: Optional[TargetObjectType] = None
    Description: Optional[StructuredStringType] = None
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    EffectivePeriod: Optional[List[DateType]] = Field(None, min_length=0)
    AdditionalInformation: Optional[List[AdditionalInformationType]] = Field(
        None, min_length=0
    )
    Privacy: Optional[str] = None


class RepresentedVariable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    RepresentedVariableName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptualVariableReference: Optional[Reference] = None
    UnitTypeReference: Optional[Reference] = None
    ConceptReference: Optional[Reference] = None
    CategorySchemeReference: Optional[Reference] = None
    ValueRepresentation: Optional[RepresentationType] = None
    ValueRepresentationReference: Optional[Reference] = None


class RepresentedVariableGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfRepresentedVariableGroup: Optional[CodeValueType] = None
    RepresentedVariableGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    RepresentedVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    RepresentedVariableGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class RepresentedVariableScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    RepresentedVariableSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RepresentedVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RepresentedVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    RepresentedVariableGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class Sample(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfSample: Optional[CodeValueType] = None
    SampleName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    PopulationOfConcern: Optional[List[PopulationType]] = Field(None, min_length=0)
    OverallTargetSampleSize: Optional[List[PopulationSizeType]] = Field(
        None, min_length=0
    )
    OverallSampleSize: Optional[SizeType] = None
    ApplicationDetails: Optional[List[ApplicationDetailsType]] = Field(
        None, min_length=0
    )
    DateOfSample: Optional[List[DateType]] = Field(None, min_length=0)
    SampleLocationReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingPlanImplementedReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    SampleFrameUsedReference: Optional[List[Reference]] = Field(None, min_length=0)
    ComponentSampleReference: Optional[List[Reference]] = Field(None, min_length=0)


class SamplingInformationGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfSamplingInformationGroup: Optional[CodeValueType] = None
    SamplingInformationGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    SampleFrameReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingPlanReference: Optional[List[Reference]] = Field(None, min_length=0)
    SampleReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingInformationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    IsOrdered: Optional[bool] = None


class SamplingInformationScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    SamplingInformationSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    SamplingInformationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    SampleFrameReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingPlanReference: Optional[List[Reference]] = Field(None, min_length=0)
    SampleReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingInformationGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class SamplingPlan(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfSamplingPlan: Optional[CodeValueType] = None
    SamplingPlanName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    IntendedTargetPopulation: Optional[PopulationType] = None
    IntendedSurveyPopulation: Optional[PopulationType] = None
    SplitRationale: Optional[StructuredStringType] = None
    ControlConstructReference: Optional[Reference] = None
    StratificationRationale: Optional[StratificationRationaleType] = None


class Split(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfSequence: Optional[List[CodeValueType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)


class SplitJoin(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfSequence: Optional[List[CodeValueType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)


class StatementItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    DisplayText: Optional[List[DynamicTextType]] = Field(None, min_length=0)


class StatisticalClassification(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ReleaseDate: Optional[CogsDate] = None
    TerminationDate: Optional[CogsDate] = None
    IsCurrent: Optional[bool] = None
    MaintenanceUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    ContactPersonReference: Optional[List[Reference]] = Field(None, min_length=0)
    LegalBase: Optional[List[StructuredStringType]] = Field(None, min_length=0)
    Publication: Optional[List[PublicationType]] = Field(None, min_length=0)
    Copyright: Optional[InternationalStringType] = None
    IsDisseminationAllowed: Optional[bool] = None
    LevelContext: Optional[List[LevelContextType]] = Field(None, min_length=0)
    ClassificationIndexReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsVersion: Optional[bool] = None
    IsUpdate: Optional[bool] = None
    IsFloating: Optional[bool] = None
    PredecessorReference: Optional[Reference] = None
    SuccessorReference: Optional[Reference] = None
    DerivedFromReference: Optional[Reference] = None
    ChangesFromPreceding: Optional[StructuredStringType] = None
    UpdatesAllowed: Optional[bool] = None
    PermissibleUpdates: Optional[StructuredStringType] = None
    Updates: Optional[StructuredStringType] = None
    VariantOfReference: Optional[Reference] = None
    VariantChangesFromBase: Optional[StructuredStringType] = None
    VariantPurpose: Optional[StructuredStringType] = None


class SubUniverseClass(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    SubUniverseClassName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[LabelType] = None
    Description: Optional[StructuredStringType] = None
    DefiningConceptReference: Optional[Reference] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    SubUniverseClassReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class TabularNCubeRecordLayout(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureLinkReference: Optional[Reference] = None
    PhysicalStructurePhysicalRecordSegmentUsed: Optional[str] = None
    EndOfLineMarker: Optional[CodeValueType] = None
    TextQualifier: Optional[str] = None
    CharacterSet: Optional[CodeValueType] = None
    ArrayBase: Optional[conint(ge=-2147483648, le=2147483648)] = None
    NCubeInstanceTReference: Optional[List[Reference]] = Field(None, min_length=0)
    TopLeftTableAnchor: Optional[TopLeftTableAnchorType] = None


class TranslationActivity(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentActivityName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DesiredOutcome: Optional[StructuredStringType] = None
    ProcessSummary: Optional[StructuredStringType] = None
    RecommendedStaffRequirements: Optional[List[RecommendedStaffRequirementsType]] = (
        Field(None, min_length=0)
    )
    AdditionalRequiredResources: Optional[StructuredStringType] = None
    DebriefingProcess: Optional[DebriefingProcessType] = None
    TranslationMethod: Optional[List[TranslationMethodType]] = Field(None, min_length=0)
    TranslationRequirements: Optional[TranslationRequirementsType] = None
    TranslationAid: Optional[List[TranslationAidType]] = Field(None, min_length=0)
    TranslatorRequirements: Optional[List[TranslatorRequirementsType]] = Field(
        None, min_length=0
    )
    TranslationSourceLanguage: Optional[List[Language]] = Field(None, min_length=0)
    TranslationTargetLanguage: Optional[List[Language]] = Field(None, min_length=0)


class UnitType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Name: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptReference: Optional[Reference] = None


class UnitTypeGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfUnitTypeGroup: Optional[CodeValueType] = None
    UnitTypeGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    UnitTypeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UnitTypeGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class UnitTypeScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    UnitTypeSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UnitTypeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UnitTypeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UnitTypeGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class UniverseGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfUniverseGroup: Optional[CodeValueType] = None
    UniverseGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    GroupingUniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    GroupingConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class UniverseScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    UniverseSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class Variable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    VariableName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    OutParameter: Optional[ParameterType] = None
    SourceParameterReference: Optional[ParameterType] = None
    SourceVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    RepresentedVariableReference: Optional[Reference] = None
    ConceptualVariableReference: Optional[Reference] = None
    WeightingProcessReference: Optional[Reference] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    QuestionReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementReference: Optional[List[Reference]] = Field(None, min_length=0)
    EmbargoReference: Optional[EmbargoType] = None
    SourceUnit: Optional[CodeValueType] = None
    AnalysisUnit: Optional[CodeValueType] = None
    UnitTypeReference: Optional[Reference] = None
    VariableRepresentation: Optional[VariableRepresentationType] = None
    IsTemporal: Optional[bool] = None
    IsGeographic: Optional[bool] = None
    IsWeight: Optional[bool] = None


class VariableGroup(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfVariableGroup: Optional[CodeValueType] = None
    VariableGroupName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptReference: Optional[Reference] = None
    Subject: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    VariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsOrdered: Optional[bool] = None


class VariableScheme(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    VariableSchemeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    VariableSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableGroupReference: Optional[List[Reference]] = Field(None, min_length=0)


class Versionable(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None


class WeightingMethodology(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfWeightingMethodology: Optional[CodeValueType] = None
    Description: Optional[StructuredStringType] = None


class AccessType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    typeOfAccess: Optional[CodeValueType] = None
    accessTypeName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    confidentialityStatement: Optional[StructuredStringType] = None
    accessPermission: Optional[List[FormType]] = Field(None, min_length=0)
    restrictions: Optional[StructuredStringType] = None
    citationRequirement: Optional[StructuredStringType] = None
    depositRequirement: Optional[StructuredStringType] = None
    accessConditions: Optional[StructuredStringType] = None
    disclaimer: Optional[StructuredStringType] = None
    accessRestrictionDate: Optional[AccessRestrictionDateType] = None
    contactOrganizationReference: Optional[List[Reference]] = Field(None, min_length=0)


class AttributeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    variableReference: Optional[Reference] = None
    attachmentValue: Optional[str] = None
    attachmentRegionReference: Optional[CoordinateRegionType] = None
    measureDefinitionReference: Optional[List[MeasureDefinitionType]] = Field(
        None, min_length=0
    )
    value: Optional[List[ValueType]] = Field(None, min_length=0)
    attachmentLevel: Optional[str] = None


class CodeSubsetInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    includedLevel: Optional[List[NonNegativeInteger]] = Field(None, min_length=0)
    includedCode: Optional[IncludedCodeType] = None
    dataExistence: Optional[DataExistenceType] = None


class CommandCodeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[StructuredStringType] = None
    command: Optional[List[CommandType]] = Field(None, min_length=0)
    commandFile: Optional[List[CommandFileType]] = Field(None, min_length=0)
    structuredCommand: Optional[StructuredCommandType] = None


class DataSourceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    sourceDescription: Optional[StructuredStringType] = None
    sourceType: Optional[List[CodeValueType]] = Field(None, min_length=0)
    origin: Optional[List[OriginType]] = Field(None, min_length=0)
    sourceCharacteristic: Optional[StructuredStringType] = None


class ElseIfTextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ifCondition: Optional[CommandCodeType] = None
    thenResult: Optional[ConditionalResultType] = None


class ElseIfType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ifCondition: Optional[CommandCodeType] = None
    thenConstructReference: Optional[Reference] = None


class FilteredCategoryStatisticsType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    filterVariableReference: Optional[Reference] = None
    filterVariableCategory: Optional[List[FilterVariableCategoryType]] = Field(
        None, min_length=0
    )


class GenerationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    componentReference: Optional[List[Reference]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    commandCode: Optional[List[CommandCodeType]] = Field(None, min_length=0)
    otherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    isDerived: Optional[bool] = None
    qualification: Optional[str] = None


class GrossRecordStructureType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    logicalRecordReference: Optional[LogicalRecordType] = None
    physicalRecordSegment: Optional[List[PhysicalRecordSegmentType]] = Field(
        None, min_length=0
    )
    numberOfPhysicalSegments: Optional[NonNegativeInteger] = None


class IfThenElseTextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ifCondition: Optional[CommandCodeType] = None
    thenResult: Optional[ConditionalResultType] = None
    elseIfText: Optional[List[ElseIfTextType]] = Field(None, min_length=0)
    elseResult: Optional[ConditionalResultType] = None


class IndividualIdentificationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    individualName: Optional[List[IndividualNameType]] = Field(None, min_length=0)
    dDIMaintenanceAgencyID: Optional[List[DDIMaintenanceAgencyIDType]] = Field(
        None, min_length=0
    )
    researcherID: Optional[List[ResearcherIDType]] = Field(None, min_length=0)
    individualImage: Optional[List[PrivateImageType]] = Field(None, min_length=0)


class ItemType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    citation: Optional[CitationType] = None
    locationInArchive: Optional[List[InternationalStringType]] = Field(
        None, min_length=0
    )
    callNumber: Optional[str] = None
    uRI: Optional[AnyURI] = None
    itemFormat: Optional[CodeValueType] = None
    media: Optional[CodeValueType] = None
    studyClass: Optional[StudyClassType] = None
    access: Optional[AccessType] = None
    originalArchiveOrganizationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    availabilityStatus: Optional[StructuredStringType] = None
    dataFileQuantity: Optional[NonNegativeInteger] = None
    collectionCompleteness: Optional[StructuredStringType] = None
    item: Optional[List[ItemType]] = None


class RestrictionProcessType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    processingInstructionReference: Optional[Reference] = None
    commandCode: Optional[CommandCodeType] = None


class RosterType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    label: Optional[LabelType] = None
    conditionForContinuation: Optional[CommandCodeType] = None
    baseCodeValue: Optional[int] = None
    codeIterationValue: Optional[int] = None
    minimumRequired: Optional[NonNegativeInteger] = None
    maximumAllowed: Optional[NonNegativeInteger] = None


class SpecificSequenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    itemSequenceType: Optional[str] = None
    alternateSequenceType: Optional[CommandCodeType] = None


class UsageGuideType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    usageExample: Optional[StructuredStringType] = None
    usageRestrictions: Optional[StructuredStringType] = None
    usageRecommendations: Optional[StructuredStringType] = None
    commandCode: Optional[List[CommandCodeType]] = Field(None, min_length=0)


class Category(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    CategoryName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ConceptReference: Optional[Reference] = None
    Generation: Optional[GenerationType] = None
    SubCategoryReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsMissing: Optional[bool] = None


class ComputationItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfComputationItem: Optional[CodeValueType] = None
    CommandCode: Optional[CommandCodeType] = None
    AssignedVariableReference: Optional[ParameterType] = None


class GeneralInstruction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    CommandCode: Optional[List[CommandCodeType]] = Field(None, min_length=0)
    OverriddenCodeReference: Optional[Reference] = None
    IsOverride: Optional[bool] = None


class GenerationInstruction(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    InputQuestionReference: Optional[List[Reference]] = Field(None, min_length=0)
    InputMeasurementReference: Optional[List[Reference]] = Field(None, min_length=0)
    InputVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExternalInformation: Optional[List[ExternalInformationType]] = Field(
        None, min_length=0
    )
    Description: Optional[StructuredStringType] = None
    CommandCode: Optional[List[CommandCodeType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)
    Aggregation: Optional[AggregationType] = None
    IsDerived: Optional[bool] = None


class IfThenElse(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfIfThenElse: Optional[CodeValueType] = None
    IfCondition: Optional[CommandCodeType] = None
    ThenConstructReference: Optional[Reference] = None
    ElseIf: Optional[List[ElseIfType]] = Field(None, min_length=0)
    ElseConstructReference: Optional[Reference] = None


class Individual(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    IndividualIdentification: Optional[IndividualIdentificationType] = None
    Description: Optional[StructuredStringType] = None
    Keyword: Optional[List[InternationalCodeValueType]] = Field(None, min_length=0)
    RegionalCoverage: Optional[List[CodeValueType]] = Field(None, min_length=0)
    AdditionalInformation: Optional[List[AdditionalInformationType]] = Field(
        None, min_length=0
    )
    LanguageAbility: Optional[List[IndividualLanguageType]] = Field(None, min_length=0)
    ContactInformation: Optional[List[ContactInformationType]] = Field(
        None, min_length=0
    )
    Privacy: Optional[str] = None


class Loop(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    LoopVariableReference: Optional[ParameterType] = None
    InitialValue: Optional[CommandCodeType] = None
    LoopWhile: Optional[CommandCodeType] = None
    StepValue: Optional[CommandCodeType] = None
    ControlConstructReference: Optional[Reference] = None


class ManagedCodeRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    CodeListReference: Optional[Reference] = None
    StatisticalClassificationReference: Optional[Reference] = None
    CodeSubsetInformation: Optional[CodeSubsetInformationType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class NCube(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    NCubeName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    ImputationReference: Optional[Reference] = None
    SourceUnit: Optional[CodeValueType] = None
    AnalysisUnit: Optional[CodeValueType] = None
    Purpose: Optional[StructuredStringType] = None
    Dimension: Optional[List[DimensionType]] = Field(None, min_length=0)
    CoordinateRegion: Optional[List[CoordinateRegionType]] = Field(None, min_length=0)
    MeasureDefinition: Optional[List[MeasureDefinitionType]] = Field(None, min_length=0)
    Attribute: Optional[List[AttributeType]] = Field(None, min_length=0)
    DimensionCount: Optional[NonNegativeInteger] = None
    CellCount: Optional[NonNegativeInteger] = None
    IsClean: Optional[bool] = None


class PhysicalStructure(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    PhysicalStructureName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    FileFormat: Optional[CodeValueType] = None
    DefaultDataType: Optional[CodeValueType] = None
    DefaultDelimiter: Optional[DelimiterType] = None
    DefaultDecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DefaultDecimalSeparator: Optional[str] = None
    DefaultDigitGroupSeparator: Optional[str] = None
    GrossRecordStructure: Optional[List[GrossRecordStructureType]] = Field(
        None, min_length=0
    )


class QuestionConstruct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionReference: Optional[Reference] = None
    ResponseSequence: Optional[SpecificSequenceType] = None
    DimensionSequence: Optional[SpecificSequenceType] = None
    ResponseUnit: Optional[CodeValueType] = None
    AnalysisUnit: Optional[List[CodeValueType]] = Field(None, min_length=0)
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    EstimatedSecondsResponseTime: Optional[float] = None


class RepeatUntil(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    UntilCondition: Optional[CommandCodeType] = None
    UntilConstructReference: Optional[Reference] = None


class RepeatWhile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    WhileCondition: Optional[CommandCodeType] = None
    WhileConstructReference: Optional[Reference] = None


class SampleFrame(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    SampleFrameName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ValidPeriod: Optional[DateType] = None
    CustodianReference: Optional[Reference] = None
    SampleFrameAccess: Optional[AccessType] = None
    UniverseReference: Optional[List[Reference]] = Field(None, min_length=0)
    UnitsOfFrame: Optional[PopulationSizeType] = None
    FrameLimitations: Optional[StructuredStringType] = None
    AuxiliaryInformation: Optional[StructuredStringType] = None
    ReferencePeriod: Optional[DateType] = None
    UpdateProcedure: Optional[StructuredStringType] = None
    SourceFrameReference: Optional[List[Reference]] = Field(None, min_length=0)


class SampleStep(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConditionForAcceptance: Optional[List[StructuredStringType]] = Field(
        None, min_length=0
    )
    CommandCode: Optional[CommandCodeType] = None
    Stratification: Optional[StratificationType] = None


class SamplingStage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfSequence: Optional[List[CodeValueType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConstructSequence: Optional[SpecificSequenceType] = None
    FrameRequirements: Optional[StructuredStringType] = None
    RecommendedSampleFrameReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    Stratification: Optional[List[StratificationType]] = Field(None, min_length=0)
    SamplingUnitReference: Optional[Reference] = None
    SelectionProbability: Optional[StructuredStringType] = None


class Sequence(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ConstructName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    TypeOfSequence: Optional[List[CodeValueType]] = Field(None, min_length=0)
    ControlConstructReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConstructSequence: Optional[SpecificSequenceType] = None


class VariableStatistics(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    VariableReference: Optional[Reference] = None
    TotalResponses: Optional[NonNegativeInteger] = None
    StandardWeightReference: Optional[StandardWeightType] = None
    WeightVariableReference: Optional[Reference] = None
    MissingValuesReference: Optional[Reference] = None
    SummaryStatistic: Optional[List[SummaryStatisticType]] = Field(None, min_length=0)
    UnfilteredCategoryStatistics: Optional[List[UnfilteredCategoryStatisticsType]] = (
        Field(None, min_length=0)
    )
    FilteredCategoryStatistics: Optional[List[FilteredCategoryStatisticsType]] = Field(
        None, min_length=0
    )


class Weighting(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    TypeOfWeighting: Optional[CodeValueType] = None
    Description: Optional[StructuredStringType] = None
    WeightingMethodologyReference: Optional[List[Reference]] = Field(None, min_length=0)
    AnalysisUnit: Optional[CodeValueType] = None
    UsageGuide: Optional[UsageGuideType] = None
    StandardWeight: Optional[List[StandardWeightType]] = Field(None, min_length=0)
    BasedOnSampleReference: Optional[List[Reference]] = Field(None, min_length=0)


class AttachedAttributeIType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attributeReference: Optional[AttributeType] = None
    value: Optional[ValueType] = None


class AttachedAttributeTType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attributeReference: Optional[AttributeType] = None
    physicalTableLocation: Optional[PhysicalTableLocationType] = None
    value: Optional[ValueType] = None


class AttachedAttributeType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attributeReference: Optional[AttributeType] = None
    physicalLocation: Optional[PhysicalLocationType] = None
    value: Optional[ValueType] = None


class CodeRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    codeListReference: Optional[Reference] = None
    statisticalClassificationReference: Optional[Reference] = None
    codeSubsetInformation: Optional[CodeSubsetInformationType] = None


class CollectionEventType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    collectionEventName: Optional[List[NameType]] = Field(None, min_length=0)
    label: Optional[List[LabelType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    dataCollectorOrganizationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    dataSource: Optional[List[DataSourceType]] = Field(None, min_length=0)
    dataCollectionDate: Optional[DateType] = None
    dataCollectionFrequency: Optional[List[DataCollectionFrequencyType]] = Field(
        None, min_length=0
    )
    modeOfCollection: Optional[List[ModeOfCollectionType]] = Field(None, min_length=0)
    instrumentReference: Optional[List[Reference]] = Field(None, min_length=0)
    collectionSituation: Optional[List[CollectionSituationType]] = Field(
        None, min_length=0
    )
    actionToMinimizeLosses: Optional[List[ActionToMinimizeLossesType]] = Field(
        None, min_length=0
    )
    qualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    sampleReference: Optional[List[Reference]] = Field(None, min_length=0)


class CollectionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    citation: Optional[CitationType] = None
    locationInArchive: Optional[List[InternationalStringType]] = Field(
        None, min_length=0
    )
    callNumber: Optional[str] = None
    uRI: Optional[AnyURI] = None
    itemQuantity: Optional[NonNegativeInteger] = None
    studyClass: Optional[StudyClassType] = None
    defaultAccess: Optional[AccessType] = None
    originalArchiveOrganizationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    availabilityStatus: Optional[StructuredStringType] = None
    dataFileQuantity: Optional[NonNegativeInteger] = None
    collectionCompleteness: Optional[StructuredStringType] = None
    item: Optional[List[ItemType]] = Field(None, min_length=0)
    collection: Optional[List[CollectionType]] = None


class ConditionalTextType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    expression: Optional[CommandCodeType] = None
    ifThenElseText: Optional[IfThenElseTextType] = None
    sourceParameterReference: Optional[ParameterType] = None


class DataItemIType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dimensionRankValue: Optional[List[DimensionRankValueType]] = Field(
        None, min_length=0
    )
    attachedAttribute: Optional[List[AttachedAttributeType]] = Field(None, min_length=0)
    measureI: Optional[List[MeasureIType]] = Field(None, min_length=0)
    lang: Optional[Language] = None


class DataItemNType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dimensionRankValue: Optional[List[DimensionRankValueType]] = Field(
        None, min_length=0
    )
    attachedAttribute: Optional[List[AttachedAttributeType]] = Field(None, min_length=0)
    measure: Optional[List[MeasureType]] = Field(None, min_length=0)
    lang: Optional[Language] = None


class DataItemTType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dimensionRankValue: Optional[List[DimensionRankValueType]] = Field(
        None, min_length=0
    )
    attachedAttributeT: Optional[List[AttachedAttributeTType]] = Field(
        None, min_length=0
    )
    measureT: Optional[List[MeasureTType]] = Field(None, min_length=0)
    lang: Optional[Language] = None


class GridDimensionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    codeDomain: Optional[CodeDomainType] = None
    roster: Optional[RosterType] = None
    createSummary: Optional[CreateSummaryType] = None
    rank: Optional[NonNegativeInteger] = None
    displayCode: Optional[bool] = None
    displayLabel: Optional[bool] = None


class ManagedMissingValuesRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedMissingValuesRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    MissingCodeRepresentation: Optional[List[CodeRepresentationBaseType]] = Field(
        None, min_length=0
    )
    MissingNumericRepresentation: Optional[List[NumericRepresentationBaseType]] = Field(
        None, min_length=0
    )
    MissingTextRepresentation: Optional[List[TextRepresentationBaseType]] = Field(
        None, min_length=0
    )
    ProcessingInstructionReference: Optional[Reference] = None
    IsBlankMissingValue: Optional[bool] = None


class NCubeInstance(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    NCubeReference: Optional[Reference] = None
    MeasureDimension: Optional[MeasureDimensionType] = None
    AttachedAttribute: Optional[List[AttachedAttributeType]] = Field(None, min_length=0)
    DataItemN: Optional[List[DataItemNType]] = Field(None, min_length=0)
    DefaultDataType: Optional[CodeValueType] = None
    DefaultDelimiter: Optional[DelimiterType] = None
    DefaultDecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DefaultDecimalSeparator: Optional[str] = None
    DefaultDigitGroupSeparator: Optional[str] = None
    NumberOfCases: Optional[NonNegativeInteger] = None


class NCubeInstanceI(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    NCubeReference: Optional[Reference] = None
    MeasureDimension: Optional[MeasureDimensionType] = None
    AttachedAttributeI: Optional[List[AttachedAttributeIType]] = Field(
        None, min_length=0
    )
    DataItemI: Optional[List[DataItemIType]] = Field(None, min_length=0)
    DefaultDataType: Optional[CodeValueType] = None
    DefaultDelimiter: Optional[DelimiterType] = None
    DefaultDecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DefaultDecimalSeparator: Optional[str] = None
    DefaultDigitGroupSeparator: Optional[str] = None
    NumberOfCases: Optional[NonNegativeInteger] = None


class NCubeInstanceT(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    NCubeReference: Optional[Reference] = None
    MeasureDimension: Optional[MeasureDimensionType] = None
    AttachedAttributeT: Optional[List[AttachedAttributeTType]] = Field(
        None, min_length=0
    )
    DataItemT: Optional[List[DataItemTType]] = Field(None, min_length=0)
    DefaultDataType: Optional[CodeValueType] = None
    DefaultDelimiter: Optional[DelimiterType] = None
    DefaultDecimalPositions: Optional[conint(ge=-2147483648, le=2147483648)] = None
    DefaultDecimalSeparator: Optional[str] = None
    DefaultDigitGroupSeparator: Optional[str] = None
    NumberOfCases: Optional[NonNegativeInteger] = None


class QuestionGrid(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    DevelopmentResultsReference: Optional[List[Reference]] = Field(None, min_length=0)
    QuestionGridName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    InParameter: Optional[List[InParameterType]] = Field(None, min_length=0)
    OutParameter: Optional[List[ParameterType]] = Field(None, min_length=0)
    Binding: Optional[List[BindingType]] = Field(None, min_length=0)
    QuestionText: Optional[List[DynamicTextType]] = Field(None, min_length=0)
    QuestionIntent: Optional[StructuredStringType] = None
    GridDimension: Optional[List[GridDimensionType]] = Field(None, min_length=0)
    ResponseDomain: Optional[RepresentationType] = None
    ResponseDomainReference: Optional[Reference] = None
    StructuredMixedGridResponseDomain: Optional[
        StructuredMixedGridResponseDomainType
    ] = None
    CellLabel: Optional[List[CellLabelType]] = Field(None, min_length=0)
    FixedCellValue: Optional[List[FixedCellValueType]] = Field(None, min_length=0)
    ConceptReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExternalAid: Optional[List[ExternalAidType]] = Field(None, min_length=0)
    ExternalInterviewerInstruction: Optional[
        List[ExternalInterviewerInstructionType]
    ] = Field(None, min_length=0)
    InterviewerInstructionAttachment: Optional[List[AttachedInstructionType]] = Field(
        None, min_length=0
    )
    RepresentedVariableReference: Optional[List[Reference]] = Field(None, min_length=0)
    EstimatedSecondsResponseTime: Optional[float] = None


class Archive(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ArchiveModuleName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    ArchiveSpecific: Optional[List[ArchiveSpecificType]] = Field(None, min_length=0)
    OrganizationSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    LifecycleInformation: Optional[LifecycleInformationType] = None


class BaseLogicalProduct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    LogicalProductName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    DataRelationshipReference: Optional[List[Reference]] = Field(None, min_length=0)


class ConceptualComponent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    ConceptualComponentModuleName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    ConceptSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicLocationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    UnitTypeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)


class DataCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    DataCollectionModuleName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    MethodologyReference: Optional[Reference] = None
    DataCaptureDevelopmentReference: Optional[Reference] = None
    CollectionEvent: Optional[List[CollectionEventType]] = Field(None, min_length=0)
    QuestionSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ControlConstructSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    InterviewerInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    InstrumentSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstrumentReference: Optional[List[Reference]] = Field(None, min_length=0)
    ProcessingEventSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProcessingInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    SamplingInformationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    DevelopmentActivitySchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class DDIInstance(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    Citation: Optional[CitationType] = None
    Coverage: Optional[CoverageType] = None
    GroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    ResourcePackageReference: Optional[List[Reference]] = Field(None, min_length=0)
    LocalHoldingPackageReference: Optional[List[Reference]] = Field(None, min_length=0)
    StudyUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    DDIProfileReference: Optional[List[Reference]] = Field(None, min_length=0)
    TranslationInformation: Optional[TranslationType] = None


class GeographicLocation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    GeographicLocationName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    GeographicLevelReference: Optional[GeographicLevelType] = None
    GeographicLevelDescription: Optional[StructuredStringType] = None
    AuthorizedSource: Optional[List[AuthorizedSourceType]] = Field(None, min_length=0)
    LocationValue: Optional[List[LocationValueType]] = Field(None, min_length=0)


class GeographicStructure(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    GeographicStructureName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    AuthorizedSource: Optional[List[AuthorizedSourceType]] = Field(None, min_length=0)
    GeographicLevel: Optional[List[GeographicLevelType]] = Field(None, min_length=0)
    GeographicLevelReference: Optional[List[GeographicLevelType]] = Field(
        None, min_length=0
    )


class Group(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    TypeOfGroup: Optional[CodeValueType] = None
    Citation: Optional[CitationType] = None
    Abstract: Optional[StructuredStringType] = None
    AuthorizationSource: Optional[List[AuthorizationSourceType]] = Field(
        None, min_length=0
    )
    ApprovalReviewReference: Optional[Reference] = None
    DefiningConceptReference: Optional[Reference] = None
    UniverseReference: Optional[Reference] = None
    SeriesStatement: Optional[List[SeriesStatementType]] = Field(None, min_length=0)
    InformationClassificationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualitySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExPostEvaluation: Optional[List[ExPostEvaluationType]] = Field(None, min_length=0)
    FundingInformation: Optional[List[FundingInformationType]] = Field(
        None, min_length=0
    )
    ProjectBudget: Optional[List[BudgetType]] = Field(None, min_length=0)
    Purpose: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    AnalysisUnit: Optional[List[CodeValueType]] = Field(None, min_length=0)
    AnalysisUnitsCovered: Optional[InternationalStringType] = None
    KindOfData: Optional[List[KindOfDataType]] = Field(None, min_length=0)
    GeneralDataFormat: Optional[List[CodeValueType]] = Field(None, min_length=0)
    RequiredResourcePackages: Optional[RequiredResourcePackagesType] = None
    Embargo: Optional[List[EmbargoType]] = Field(None, min_length=0)
    OtherMaterialSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualComponentReference: Optional[List[Reference]] = Field(None, min_length=0)
    DataCollectionReference: Optional[List[Reference]] = Field(None, min_length=0)
    LogicalProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalDataProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ArchiveReference: Optional[List[Reference]] = Field(None, min_length=0)
    ClassificationFamilyReference: Optional[List[Reference]] = Field(None, min_length=0)
    DDIProfileReference: Optional[List[Reference]] = Field(None, min_length=0)
    ComparisonReference: Optional[List[Reference]] = Field(None, min_length=0)
    StudyUnitReference: Optional[List[Reference]] = Field(None, min_length=0)
    GroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    Time: Optional[str] = None
    CaptureInstrument: Optional[str] = None
    Panel: Optional[str] = None
    Geography: Optional[str] = None
    DataProduct: Optional[str] = None
    LanguageRelationship: Optional[str] = None
    UserDefinedGroupProperty: Optional[str] = None
    UserDefinedGroupPropertyValue: Optional[str] = None
    IsInheritable: Optional[bool] = None


class LogicalProduct(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    LogicalProductName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    DataRelationshipReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategorySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    CodeListSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ManagedRepresentationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RepresentedVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    VariableSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    NCubeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)


class ManagedGeographicLocationCodeRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedGeographicLocationCodeRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    IncludedGeographicLocationCodes: Optional[IncludedGeographicLocationCodesType] = (
        None
    )
    LimitedCodeSegmentCaptured: Optional[LimitedCodeSegmentCapturedType] = None
    ClassificationLevelCode: Optional[CodeValueType] = None


class ManagedGeographicStructureCodeRepresentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    ManagedGeographicStructureCodeRepresentationName: Optional[List[NameType]] = Field(
        None, min_length=0
    )
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    RecommendedDataType: Optional[CodeValueType] = None
    GenericOutputFormat: Optional[CodeValueType] = None
    MeasurementUnit: Optional[CodeValueType] = None
    IncludedGeographicStructureCodes: Optional[IncludedGeographicStructureCodesType] = (
        None
    )
    ClassificationLevelCode: Optional[CodeValueType] = None


class PhysicalInstance(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    Citation: Optional[CitationType] = None
    DataFingerprint: Optional[List[DataFingerprintType]] = Field(None, min_length=0)
    Coverage: Optional[CoverageType] = None
    DataRelationshipReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableGroupReference: Optional[List[Reference]] = Field(None, min_length=0)
    TabularNCubeRecordLayoutReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProprietaryRecordLayoutReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RecordLayoutReference: Optional[List[Reference]] = Field(None, min_length=0)
    DefaultMissingValuesReference: Optional[Reference] = None
    DataFileIdentification: Optional[List[DataFileIdentificationType]] = Field(
        None, min_length=0
    )
    DataFileVersion: Optional[DataFileVersionType] = None
    InformationClassificationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    GrossFileStructure: Optional[GrossFileStructureType] = None
    ProprietaryInfo: Optional[ProprietaryInfoType] = None
    StatisticalSummary: Optional[StatisticalSummaryType] = None
    ByteOrder: Optional[CodeValueType] = None


class RepresentationMap(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    RepresentationMapName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    SourceRepresentation: Optional[SourceRepresentationType] = None
    TargetRepresentation: Optional[TargetRepresentationType] = None
    Correspondence: Optional[CorrespondenceType] = None
    ProcessingInstructionReference: Optional[Reference] = None
    ContextSpecificComparison: Optional[bool] = None


class ResourcePackage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    Citation: Optional[CitationType] = None
    TypeOfResourcePackage: Optional[CodeValueType] = None
    Abstract: Optional[StructuredStringType] = None
    AuthorizationSource: Optional[List[AuthorizationSourceType]] = Field(
        None, min_length=0
    )
    ApprovalReviewReference: Optional[Reference] = None
    DefiningConceptReference: Optional[Reference] = None
    UniverseReference: Optional[Reference] = None
    SeriesStatement: Optional[List[SeriesStatementType]] = Field(None, min_length=0)
    InformationClassificationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    FundingInformation: Optional[List[FundingInformationType]] = Field(
        None, min_length=0
    )
    ProjectBudget: Optional[List[BudgetType]] = Field(None, min_length=0)
    Purpose: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    Embargo: Optional[List[EmbargoType]] = Field(None, min_length=0)
    OtherMaterialSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ResourcePackageArchive: Optional[List[ResourcePackageArchiveType]] = Field(
        None, min_length=0
    )
    ConceptualComponentReference: Optional[List[Reference]] = Field(None, min_length=0)
    DataCollectionReference: Optional[List[Reference]] = Field(None, min_length=0)
    LogicalProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalDataProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ArchiveReference: Optional[List[Reference]] = Field(None, min_length=0)
    DDIProfileReference: Optional[List[Reference]] = Field(None, min_length=0)
    ComparisonReference: Optional[List[Reference]] = Field(None, min_length=0)
    ClassificationFamilyReference: Optional[List[Reference]] = Field(None, min_length=0)
    ClassificationCorrespondenceTableReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    OrganizationSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    UniverseSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RepresentedVariableSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    GeographicLocationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    InterviewerInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ControlConstructSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QuestionSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    MeasurementSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    CategorySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    CodeListSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    NCubeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    VariableSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalStructureSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    RecordLayoutSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualitySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    InstrumentSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ProcessingEventSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ProcessingInstructionSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ManagedRepresentationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    UnitTypeSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    SamplingInformationSchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    DevelopmentActivitySchemeReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )


class StudyUnit(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    Note: Optional[List[NoteType]] = Field(None, min_length=0)
    Software: Optional[List[SoftwareType]] = Field(None, min_length=0)
    MetadataQuality: Optional[List[MetadataQualityType]] = Field(None, min_length=0)
    ExternalReferenceDefaultURI: Optional[AnyURI] = None
    Lang: Optional[Language] = None
    TypeOfStudyUnit: Optional[CodeValueType] = None
    Citation: Optional[CitationType] = None
    Abstract: Optional[StructuredStringType] = None
    AuthorizationSource: Optional[List[AuthorizationSourceType]] = Field(
        None, min_length=0
    )
    ApprovalReviewReference: Optional[Reference] = None
    DefiningConceptReference: Optional[Reference] = None
    UniverseReference: Optional[Reference] = None
    SeriesStatement: Optional[List[SeriesStatementType]] = Field(None, min_length=0)
    InformationClassificationReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    QualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    QualitySchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ExPostEvaluation: Optional[List[ExPostEvaluationType]] = Field(None, min_length=0)
    FundingInformation: Optional[List[FundingInformationType]] = Field(
        None, min_length=0
    )
    StudyBudget: Optional[List[BudgetType]] = Field(None, min_length=0)
    Purpose: Optional[StructuredStringType] = None
    Coverage: Optional[CoverageType] = None
    AnalysisUnit: Optional[List[CodeValueType]] = Field(None, min_length=0)
    AnalysisUnitsCovered: Optional[InternationalStringType] = None
    KindOfData: Optional[List[KindOfDataType]] = Field(None, min_length=0)
    GeneralDataFormat: Optional[List[CodeValueType]] = Field(None, min_length=0)
    RequiredResourcePackages: Optional[RequiredResourcePackagesType] = None
    Embargo: Optional[List[EmbargoType]] = Field(None, min_length=0)
    OtherMaterialSchemeReference: Optional[List[Reference]] = Field(None, min_length=0)
    ConceptualComponentReference: Optional[List[Reference]] = Field(None, min_length=0)
    DataCollectionReference: Optional[List[Reference]] = Field(None, min_length=0)
    LogicalProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalDataProductReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceReference: Optional[List[Reference]] = Field(None, min_length=0)
    PhysicalInstanceGroupReference: Optional[List[Reference]] = Field(
        None, min_length=0
    )
    ArchiveReference: Optional[List[Reference]] = Field(None, min_length=0)
    ClassificationFamilyReference: Optional[List[Reference]] = Field(None, min_length=0)
    DDIProfileReference: Optional[List[Reference]] = Field(None, min_length=0)


class Universe(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    URN: str
    Agency: str
    ID: str
    Version: str
    UserID: Optional[List[UserIDType]] = Field(None, min_length=0)
    UserAttributePair: Optional[List[StandardKeyValuePairType]] = Field(
        None, min_length=0
    )
    VersionResponsibility: Optional[str] = None
    VersionResponsibilityReference: Optional[Reference] = None
    VersionRationale: Optional[VersionRationaleType] = None
    BasedOnObject: Optional[BasedOnObjectType] = None
    RelatedOtherMaterialReference: Optional[List[Reference]] = Field(None, min_length=0)
    VersionDate: Optional[CogsDate] = None
    IsPublished: Optional[bool] = None
    UniverseName: Optional[List[NameType]] = Field(None, min_length=0)
    Label: Optional[List[LabelType]] = Field(None, min_length=0)
    Description: Optional[StructuredStringType] = None
    DefiningConceptReference: Optional[Reference] = None
    UnitTypeReference: Optional[Reference] = None
    TypeOfUnit: Optional[CodeValueType] = None
    LocationValueReference: Optional[List[LocationValueType]] = Field(
        None, min_length=0
    )
    GeographyOfUniverse: Optional[StructuredStringType] = None
    TimePeriod: Optional[List[DateType]] = Field(None, min_length=0)
    UniverseGenerationCode: Optional[List[CommandCodeType]] = Field(None, min_length=0)
    SubUniverseClassReference: Optional[List[Reference]] = Field(None, min_length=0)
    IsInclusive: Optional[bool] = None


class Model(BaseModel):
    topLevelReference: Optional[List[Reference]] = None
    agent: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Agent]] = None
    approvalReview: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ApprovalReview]] = (
        None
    )
    archive: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Archive]] = None
    baseLogicalProduct: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), BaseLogicalProduct]
    ] = None
    baseRecordLayout: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), BaseRecordLayout]
    ] = None
    category: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Category]] = None
    categoryGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), CategoryGroup]] = None
    categoryScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), CategoryScheme]] = (
        None
    )
    classificationCorrespondenceTable: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationCorrespondenceTable]
    ] = None
    classificationFamily: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationFamily]
    ] = None
    classificationIndex: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationIndex]
    ] = None
    classificationItem: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationItem]
    ] = None
    classificationLevel: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationLevel]
    ] = None
    classificationSeries: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ClassificationSeries]
    ] = None
    codeList: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), CodeList]] = None
    codeListGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), CodeListGroup]] = None
    codeListScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), CodeListScheme]] = (
        None
    )
    cognitiveExpertReviewActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), CognitiveExpertReviewActivity]
    ] = None
    cognitiveInterviewActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), CognitiveInterviewActivity]
    ] = None
    comparison: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Comparison]] = None
    computationItem: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ComputationItem]] = (
        None
    )
    concept: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Concept]] = None
    conceptGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ConceptGroup]] = None
    conceptScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ConceptScheme]] = None
    conceptualComponent: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ConceptualComponent]
    ] = None
    conceptualVariable: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ConceptualVariable]
    ] = None
    conceptualVariableGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ConceptualVariableGroup]
    ] = None
    conceptualVariableScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ConceptualVariableScheme]
    ] = None
    contentReviewActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ContentReviewActivity]
    ] = None
    controlConstruct: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ControlConstruct]
    ] = None
    controlConstructGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ControlConstructGroup]
    ] = None
    controlConstructScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ControlConstructScheme]
    ] = None
    dataCaptureDevelopment: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DataCaptureDevelopment]
    ] = None
    dataCollection: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DataCollection]] = (
        None
    )
    dataRelationship: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DataRelationship]
    ] = None
    dataSet: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DataSet]] = None
    dDIInstance: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DDIInstance]] = None
    dDIProfile: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DDIProfile]] = None
    describable: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Describable]] = None
    developmentActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentActivity]
    ] = None
    developmentActivityGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentActivityGroup]
    ] = None
    developmentActivityScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentActivityScheme]
    ] = None
    developmentImplementation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentImplementation]
    ] = None
    developmentPlan: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentPlan]] = (
        None
    )
    developmentResults: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentResults]
    ] = None
    developmentStep: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), DevelopmentStep]] = (
        None
    )
    focusGroupActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), FocusGroupActivity]
    ] = None
    generalInstruction: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeneralInstruction]
    ] = None
    generationInstruction: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GenerationInstruction]
    ] = None
    genericMap: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), GenericMap]] = None
    geographicLocation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicLocation]
    ] = None
    geographicLocationGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicLocationGroup]
    ] = None
    geographicLocationScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicLocationScheme]
    ] = None
    geographicStructure: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicStructure]
    ] = None
    geographicStructureGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicStructureGroup]
    ] = None
    geographicStructureScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), GeographicStructureScheme]
    ] = None
    group: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Group]] = None
    ifThenElse: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), IfThenElse]] = None
    individual: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Individual]] = None
    informationClassification: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), InformationClassification]
    ] = None
    inLineNCubeRecordLayout: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), InLineNCubeRecordLayout]
    ] = None
    instruction: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Instruction]] = None
    instructionGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), InstructionGroup]
    ] = None
    instrument: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Instrument]] = None
    instrumentGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), InstrumentGroup]] = (
        None
    )
    instrumentScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), InstrumentScheme]
    ] = None
    interviewerInstructionScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), InterviewerInstructionScheme]
    ] = None
    localHoldingPackage: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), LocalHoldingPackage]
    ] = None
    logicalProduct: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), LogicalProduct]] = (
        None
    )
    loop: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Loop]] = None
    maintainable: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Maintainable]] = None
    managedCategoryRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedCategoryRepresentation]
    ] = None
    managedCodeRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedCodeRepresentation]
    ] = None
    managedDateTimeRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedDateTimeRepresentation]
    ] = None
    managedDistributionRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedDistributionRepresentation]
    ] = None
    managedExternalCategoryRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedExternalCategoryRepresentation]
    ] = None
    managedGeographicLocationCodeRepresentation: Optional[
        Dict[
            constr(pattern=r'^(?!\s*$).+'), ManagedGeographicLocationCodeRepresentation
        ]
    ] = None
    managedGeographicRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedGeographicRepresentation]
    ] = None
    managedGeographicStructureCodeRepresentation: Optional[
        Dict[
            constr(pattern=r'^(?!\s*$).+'), ManagedGeographicStructureCodeRepresentation
        ]
    ] = None
    managedLocationRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedLocationRepresentation]
    ] = None
    managedMissingValuesRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedMissingValuesRepresentation]
    ] = None
    managedNominalRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedNominalRepresentation]
    ] = None
    managedNumericRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedNumericRepresentation]
    ] = None
    managedRankingRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedRankingRepresentation]
    ] = None
    managedRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedRepresentation]
    ] = None
    managedRepresentationGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedRepresentationGroup]
    ] = None
    managedRepresentationScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedRepresentationScheme]
    ] = None
    managedScaleRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedScaleRepresentation]
    ] = None
    managedTextRepresentation: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ManagedTextRepresentation]
    ] = None
    measurementConstruct: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), MeasurementConstruct]
    ] = None
    measurementGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), MeasurementGroup]
    ] = None
    measurementItem: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), MeasurementItem]] = (
        None
    )
    measurementScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), MeasurementScheme]
    ] = None
    methodology: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Methodology]] = None
    nCube: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCube]] = None
    nCubeGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCubeGroup]] = None
    nCubeInstance: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCubeInstance]] = None
    nCubeInstanceI: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCubeInstanceI]] = (
        None
    )
    nCubeInstanceT: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCubeInstanceT]] = (
        None
    )
    nCubeScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), NCubeScheme]] = None
    organization: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Organization]] = None
    organizationGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), OrganizationGroup]
    ] = None
    organizationScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), OrganizationScheme]
    ] = None
    otherMaterial: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), OtherMaterial]] = None
    otherMaterialGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), OtherMaterialGroup]
    ] = None
    otherMaterialScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), OtherMaterialScheme]
    ] = None
    physicalDataProduct: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalDataProduct]
    ] = None
    physicalInstance: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalInstance]
    ] = None
    physicalInstanceGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalInstanceGroup]
    ] = None
    physicalStructure: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalStructure]
    ] = None
    physicalStructureGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalStructureGroup]
    ] = None
    physicalStructureScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), PhysicalStructureScheme]
    ] = None
    pretestActivity: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), PretestActivity]] = (
        None
    )
    processingEvent: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingEvent]] = (
        None
    )
    processingEventGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingEventGroup]
    ] = None
    processingEventScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingEventScheme]
    ] = None
    processingInstruction: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingInstruction]
    ] = None
    processingInstructionGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingInstructionGroup]
    ] = None
    processingInstructionScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProcessingInstructionScheme]
    ] = None
    proprietaryRecordLayout: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), ProprietaryRecordLayout]
    ] = None
    qualityScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QualityScheme]] = None
    qualityStandard: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QualityStandard]] = (
        None
    )
    qualityStandardGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), QualityStandardGroup]
    ] = None
    qualityStatement: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), QualityStatement]
    ] = None
    qualityStatementGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), QualityStatementGroup]
    ] = None
    question: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Question]] = None
    questionBlock: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QuestionBlock]] = None
    questionConstruct: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), QuestionConstruct]
    ] = None
    questionGrid: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QuestionGrid]] = None
    questionGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QuestionGroup]] = None
    questionItem: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QuestionItem]] = None
    questionScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), QuestionScheme]] = (
        None
    )
    recordLayout: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), RecordLayout]] = None
    recordLayoutGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RecordLayoutGroup]
    ] = None
    recordLayoutScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RecordLayoutScheme]
    ] = None
    relation: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Relation]] = None
    repeatUntil: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), RepeatUntil]] = None
    repeatWhile: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), RepeatWhile]] = None
    representationMap: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RepresentationMap]
    ] = None
    representedVariable: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RepresentedVariable]
    ] = None
    representedVariableGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RepresentedVariableGroup]
    ] = None
    representedVariableScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), RepresentedVariableScheme]
    ] = None
    resourcePackage: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), ResourcePackage]] = (
        None
    )
    sample: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Sample]] = None
    sampleFrame: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), SampleFrame]] = None
    sampleStep: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), SampleStep]] = None
    samplingInformationGroup: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), SamplingInformationGroup]
    ] = None
    samplingInformationScheme: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), SamplingInformationScheme]
    ] = None
    samplingPlan: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), SamplingPlan]] = None
    samplingStage: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), SamplingStage]] = None
    sequence: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Sequence]] = None
    split: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Split]] = None
    splitJoin: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), SplitJoin]] = None
    statementItem: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), StatementItem]] = None
    statisticalClassification: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), StatisticalClassification]
    ] = None
    studyUnit: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), StudyUnit]] = None
    subUniverseClass: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), SubUniverseClass]
    ] = None
    tabularNCubeRecordLayout: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), TabularNCubeRecordLayout]
    ] = None
    translationActivity: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), TranslationActivity]
    ] = None
    unitType: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), UnitType]] = None
    unitTypeGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), UnitTypeGroup]] = None
    unitTypeScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), UnitTypeScheme]] = (
        None
    )
    universe: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Universe]] = None
    universeGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), UniverseGroup]] = None
    universeScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), UniverseScheme]] = (
        None
    )
    variable: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Variable]] = None
    variableGroup: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), VariableGroup]] = None
    variableScheme: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), VariableScheme]] = (
        None
    )
    variableStatistics: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), VariableStatistics]
    ] = None
    versionable: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Versionable]] = None
    weighting: Optional[Dict[constr(pattern=r'^(?!\s*$).+'), Weighting]] = None
    weightingMethodology: Optional[
        Dict[constr(pattern=r'^(?!\s*$).+'), WeightingMethodology]
    ] = None


class ArchiveSpecificType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    archiveOrganizationReference: Optional[Reference] = None
    item: Optional[List[ItemType]] = Field(None, min_length=0)
    collection: Optional[List[CollectionType]] = Field(None, min_length=0)
    defaultAccess: Optional[List[AccessType]] = Field(None, min_length=0)
    fundingInformation: Optional[List[FundingInformationType]] = Field(
        None, min_length=0
    )
    budget: Optional[List[BudgetType]] = Field(None, min_length=0)
    qualityStatementReference: Optional[List[Reference]] = Field(None, min_length=0)
    coverage: Optional[CoverageType] = None


class AuthorizedSourceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    otherMaterialReference: Optional[Reference] = None
    identifierParsingInformation: Optional[IdentifierParsingInformationType] = None


class CoverageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    topicalCoverageReference: Optional[TopicalCoverageType] = None
    topicalCoverage: Optional[TopicalCoverageType] = None
    spatialCoverageReference: Optional[GeographicCoverageType] = None
    spatialCoverage: Optional[GeographicCoverageType] = None
    temporalCoverageReference: Optional[TemporalCoverageType] = None
    temporalCoverage: Optional[TemporalCoverageType] = None
    restrictionProcess: Optional[RestrictionProcessType] = None
    isRestrictionOfParentCoverage: Optional[bool] = None


class GeographicCoverageType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    boundingBox: Optional[BoundingBoxType] = None
    description: Optional[StructuredStringType] = None
    countryCode: Optional[List[CountryCodeType]] = Field(None, min_length=0)
    geographyStructureVariableReference: Optional[Reference] = None
    spatialObject: Optional[str] = None
    geographicStructureReference: Optional[List[Reference]] = Field(None, min_length=0)
    geographicLevelReference: Optional[List[GeographicLevelType]] = Field(
        None, min_length=0
    )
    geographicLocationReference: Optional[List[Reference]] = Field(None, min_length=0)
    locationValueReference: Optional[List[LocationValueType]] = Field(
        None, min_length=0
    )
    summaryDataReference: Optional[List[GeographicLevelType]] = Field(
        None, min_length=0
    )
    highestLevelReference: Optional[LevelReferenceType] = None
    lowestLevelReference: Optional[LevelReferenceType] = None


class GeographicLevelType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    geographicLevelName: Optional[List[NameType]] = Field(None, min_length=0)
    description: Optional[StructuredStringType] = None
    geographicLevelCode: Optional[List[CodeValueType]] = Field(None, min_length=0)
    coverageLimitation: Optional[InternationalStringType] = None
    primaryComponentLevel: Optional[List[PrimaryComponentLevelType]] = Field(
        None, min_length=0
    )
    parentGeographicLevelReference: Optional[List[GeographicLevelType]] = None
    isExhaustiveParentGeographicLevel: Optional[bool] = None
    geographicLayerBaseReference: Optional[List[GeographicLevelType]] = None


class GeographicLocationCodeRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    includedGeographicLocationCodes: Optional[IncludedGeographicLocationCodesType] = (
        None
    )
    limitedCodeSegmentCaptured: Optional[LimitedCodeSegmentCapturedType] = None


class GeographicLocationIdentifierType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    geographicCode: Optional[str] = None
    authorizedSourceReference: Optional[AuthorizedSourceType] = None


class GeographicStructureCodeRepresentationBaseType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    includedGeographicStructureCodes: Optional[IncludedGeographicStructureCodesType] = (
        None
    )


class IdentificationPortionType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    geographicLevelReference: Optional[List[GeographicLevelType]] = Field(
        None, min_length=0
    )
    startPosition: Optional[NonNegativeInteger] = None
    length: Optional[NonNegativeInteger] = None


class IdentifierParsingInformationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    parentIdentificationPortion: Optional[List[IdentificationPortionType]] = Field(
        None, min_length=0
    )
    uniqueIdentificationPortion: Optional[IdentificationPortionType] = None
    arrayBase: Optional[int] = None


class IncludedGeographicLocationCodesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorizedSourceReference: Optional[AuthorizedSourceType] = None
    geographicLocationReference: Optional[Reference] = None
    excludedLocationValueReference: Optional[List[LocationValueType]] = Field(
        None, min_length=0
    )


class IncludedGeographicStructureCodesType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    authorizedSourceReference: Optional[AuthorizedSourceType] = None
    geographicStructureReference: Optional[Reference] = None
    excludedGeographicLevelReference: Optional[List[GeographicLevelType]] = Field(
        None, min_length=0
    )


class LevelReferenceType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    geographicLevelReference: Optional[GeographicLevelType] = None
    geographicLevelName: Optional[NameType] = None


class LocationValueBundleType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    locationValueReference: Optional[List[LocationValueType]] = Field(
        None, min_length=0
    )
    geographicTime: Optional[DateType] = None


class LocationValueType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field_type: Optional[str] = Field(None, alias='$type')
    locationValueName: Optional[List[NameType]] = Field(None, min_length=0)
    geographicLocationIdentifier: Optional[List[GeographicLocationIdentifierType]] = (
        Field(None, min_length=0)
    )
    definingCharacteristic: Optional[List[DefiningCharacteristicType]] = Field(
        None, min_length=0
    )
    componentParts: Optional[List[LocationValueBundleType]] = Field(None, min_length=0)
    immediateParentLocation: Optional[List[LocationValueBundleType]] = Field(
        None, min_length=0
    )
    geographicTime: Optional[DateType] = None
    geographicBoundary: Optional[List[GeographicBoundaryType]] = Field(
        None, min_length=0
    )
    supersedesLocationValue: Optional[List[LocationValueType]] = None
    supersedesPartialLocationValue: Optional[List[LocationValueType]] = None
    precedesLocationValue: Optional[List[LocationValueType]] = None
    precedesPartialLocationValue: Optional[List[LocationValueType]] = None


class PrimaryComponentLevelType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    geographicLevelReference: Optional[GeographicLevelType] = None
    coverageLimitation: Optional[InternationalStringType] = None


class TargetRepresentationType(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    managedRepresentationReference: Optional[Reference] = None
    categorySchemeReference: Optional[Reference] = None
    codeListReference: Optional[Reference] = None
    codeSubsetInformation: Optional[CodeSubsetInformationType] = None
    includedGeographicStructureCodes: Optional[IncludedGeographicStructureCodesType] = (
        None
    )
    includedGeographicLocationCodes: Optional[IncludedGeographicLocationCodesType] = (
        None
    )


CodeType.model_rebuild()
ItemMapType.model_rebuild()
ItemType.model_rebuild()
CollectionType.model_rebuild()
Archive.model_rebuild()
BaseLogicalProduct.model_rebuild()
ConceptualComponent.model_rebuild()
DataCollection.model_rebuild()
DDIInstance.model_rebuild()
GeographicLocation.model_rebuild()
GeographicStructure.model_rebuild()
Group.model_rebuild()
LogicalProduct.model_rebuild()
ManagedGeographicLocationCodeRepresentation.model_rebuild()
ManagedGeographicStructureCodeRepresentation.model_rebuild()
PhysicalInstance.model_rebuild()
RepresentationMap.model_rebuild()
ResourcePackage.model_rebuild()
StudyUnit.model_rebuild()
Universe.model_rebuild()
ArchiveSpecificType.model_rebuild()
AuthorizedSourceType.model_rebuild()
CoverageType.model_rebuild()
GeographicCoverageType.model_rebuild()
GeographicLevelType.model_rebuild()
GeographicLocationCodeRepresentationBaseType.model_rebuild()
GeographicStructureCodeRepresentationBaseType.model_rebuild()
IncludedGeographicLocationCodesType.model_rebuild()
LocationValueBundleType.model_rebuild()
